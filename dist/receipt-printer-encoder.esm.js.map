{"version":3,"sources":["../src/receipt-printer-encoder.ts","../src/languages/esc-pos.ts","../src/languages/star-prnt.ts","../src/text-style.ts","../src/text-wrap.ts","../src/line-composer.ts","../generated/mapping.ts","../generated/printers.ts"],"sourcesContent":["import Dither from 'canvas-dither';\nimport Flatten from 'canvas-flatten';\nimport CodepageEncoder from '@point-of-sale/codepage-encoder';\nimport ImageData from '@canvas/image-data';\nimport resizeImageData from 'resize-image-data';\n\n/* Import local dependencies */\n\nimport LanguageEscPos from './languages/esc-pos';\nimport LanguageStarPrnt from './languages/star-prnt';\nimport LineComposer, { LineCommands, type BufferItem } from './line-composer';\nimport type {\n\tPrinterDefinition,\n\tFontType,\n\tTextAlign,\n\tStyleProperty,\n\tSize,\n\tPdf417Options,\n\tBoxOptions,\n\tBarcodeOptions,\n\tQrCodeOptions,\n\tVerticalAlign,\n\tQrCodeErrorLevel,\n\tQrCodeSize,\n\tQrCodeModel,\n\tPrinterCapabilities,\n\tCommandArray,\n\tCommand,\n\tRuleOptions\n} from './types/printers';\nimport type {\n\tEncoderOptions,\n\tEncoderConfiguration,\n\tCodepageName,\n\tCodepageValue,\n\tCodepageDefinitions,\n\tCodepageMapping,\n\tErrorLevel,\n\tCommandQueue,\n\tCodepageMappingIdentifier\n} from './types/receipt-printer-encoder';\n\n/* Import generated data */\n\nimport codepageMappingData from '../generated/mapping';\nimport printerDefinitionsMap from '../generated/printers';\n\nconst printerDefinitions = printerDefinitionsMap as Record<string, PrinterDefinition>;\nconst codepageMappings = codepageMappingData as CodepageDefinitions;\n\nconst defaultConfiguration: EncoderConfiguration = {\n\tcolumns: 42,\n\tlanguage: 'esc-pos',\n\timageMode: 'column',\n\tfeedBeforeCut: 0,\n\tnewline: '\\n\\r',\n\tcodepageMapping: 'epson',\n\t// codepageCandidates: null,\n\tdebug: false,\n\tembedded: false,\n\tcreateCanvas: null,\n\terrors: 'relaxed'\n};\n\n/**\n * Create a byte stream based on commands for receipt printers\n */\nclass ReceiptPrinterEncoder {\n\t#options: EncoderConfiguration = defaultConfiguration;\n\t#queue: BufferItem[][] = [];\n\n\t#language: LanguageEscPos | LanguageStarPrnt;\n\t#composer: LineComposer;\n\n\t#printerCapabilities: PrinterCapabilities = {\n\t\tlanguage: defaultConfiguration.language,\n\t\tcodepages: defaultConfiguration.codepageMapping as CodepageMappingIdentifier,\n\t\tfonts: {\n\t\t\tA: { size: '12x24', columns: 42 },\n\t\t\tB: { size: '9x24', columns: 56 }\n\t\t},\n\t\tbarcodes: {\n\t\t\tsupported: true,\n\t\t\tsymbologies: [\n\t\t\t\t'upca',\n\t\t\t\t'upce',\n\t\t\t\t'ean13',\n\t\t\t\t'ean8',\n\t\t\t\t'code39',\n\t\t\t\t'itf',\n\t\t\t\t'codabar',\n\t\t\t\t'code93',\n\t\t\t\t'code128',\n\t\t\t\t'gs1-databar-omni',\n\t\t\t\t'gs1-databar-truncated',\n\t\t\t\t'gs1-databar-limited',\n\t\t\t\t'gs1-databar-expanded'\n\t\t\t]\n\t\t},\n\t\tqrcode: {\n\t\t\tsupported: true,\n\t\t\tmodels: ['1', '2']\n\t\t},\n\t\tpdf417: {\n\t\t\tsupported: true\n\t\t}\n\t};\n\n\t#codepageMapping: CodepageMapping;\n\t#codepageCandidates: CodepageName[];\n\t#codepage: CodepageName = 'cp437';\n\n\t#state: {\n\t\tcodepage: CodepageValue;\n\t\tfont: FontType;\n\t} = {\n\t\tcodepage: 0,\n\t\tfont: 'A'\n\t};\n\n\t/**\n\t * Create a new object\n\t *\n\t * @param  {object}   options   Object containing configuration options\n\t */\n\tconstructor(options?: EncoderOptions) {\n\t\toptions = options || {};\n\n\t\tconst defaults: EncoderConfiguration = {\n\t\t\t...defaultConfiguration\n\t\t};\n\n\t\t/* Determine default settings based on the printer language */\n\n\t\tif (typeof options.language === 'string') {\n\t\t\tdefaults.columns = options.language === 'esc-pos' ? 42 : 48;\n\t\t\tdefaults.codepageMapping = options.language === 'esc-pos' ? 'epson' : 'star';\n\t\t}\n\n\t\t/* Determine default settings based on the printer model */\n\n\t\tif (typeof options.printerModel === 'string') {\n\t\t\tif (typeof printerDefinitions[options.printerModel] === 'undefined') {\n\t\t\t\tthrow new Error('Unknown printer model');\n\t\t\t}\n\n\t\t\tthis.#printerCapabilities = printerDefinitions[options.printerModel].capabilities;\n\n\t\t\t/* Apply the printer definition to the defaults */\n\n\t\t\tdefaults.columns = this.#printerCapabilities.fonts['A'].columns;\n\t\t\tdefaults.language = this.#printerCapabilities.language;\n\t\t\tdefaults.codepageMapping = this.#printerCapabilities.codepages || defaults.codepageMapping;\n\t\t\tdefaults.newline = this.#printerCapabilities?.newline || defaults.newline;\n\t\t\tdefaults.feedBeforeCut = this.#printerCapabilities?.cutter?.feed || defaults.feedBeforeCut;\n\t\t\tdefaults.imageMode = this.#printerCapabilities?.images?.mode || defaults.imageMode;\n\t\t}\n\n\t\t/* Merge options */\n\n\t\tif (options) {\n\t\t\tthis.#options = Object.assign(defaults, options);\n\t\t}\n\n\t\t/* Backwards compatibility for the width option */\n\n\t\tif (this.#options.width) {\n\t\t\tthis.#options.columns = this.#options.width;\n\t\t}\n\n\t\t/* Get the printer language */\n\n\t\tif (this.#options.language === 'esc-pos') {\n\t\t\tthis.#language = new LanguageEscPos();\n\t\t} else if (this.#options.language === 'star-prnt' || this.#options.language === 'star-line') {\n\t\t\tthis.#language = new LanguageStarPrnt();\n\t\t} else {\n\t\t\tthrow new Error('The specified language is not supported');\n\t\t}\n\n\t\t/* Determine autoflush settings */\n\t\t/*\n\n        StarPRNT printers are set up to have print start control set to page units.\n        That means the printer will only print after it has received a cut or ff command.\n        This is not ideal, so we set autoFlush to true by default, which will force\n        the printer to print after each encode().\n\n        One problem, we do not want to do this for embedded content. Only the top level\n        encoder should flush the buffer.\n\n        ESC/POS and Star Line Mode printers are set up to have print start control set to\n        line units, which means the printer will print after each line feed command.\n        We do not need to flush the buffer for these printers.\n\n    */\n\n\t\tif (typeof this.#options.autoFlush === 'undefined') {\n\t\t\tthis.#options.autoFlush = !this.#options.embedded && this.#options.language == 'star-prnt';\n\t\t}\n\n\t\t/* Check column width */\n\n\t\tif (![32, 35, 42, 44, 48].includes(this.#options.columns) && !this.#options.embedded) {\n\t\t\tthrow new Error('The width of the paper must me either 32, 35, 42, 44 or 48 columns');\n\t\t}\n\n\t\t/* Determine codepage mapping and candidates */\n\n\t\tif (typeof this.#options.codepageMapping === 'string') {\n\t\t\tif (typeof codepageMappings[this.#options.language][this.#options.codepageMapping] === 'undefined') {\n\t\t\t\tthrow new Error('Unknown codepage mapping');\n\t\t\t}\n\n\t\t\tthis.#codepageMapping = Object.fromEntries(\n\t\t\t\tcodepageMappings[this.#options.language][this.#options.codepageMapping]\n\t\t\t\t\t.map((v, i) => [v, i])\n\t\t\t\t\t.filter((i) => i)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.#codepageMapping = this.#options.codepageMapping;\n\t\t}\n\n\t\tif (this.#options.codepageCandidates) {\n\t\t\tthis.#codepageCandidates = this.#options.codepageCandidates;\n\t\t} else {\n\t\t\tthis.#codepageCandidates = Object.keys(this.#codepageMapping);\n\t\t}\n\n\t\t/* Create our line composer */\n\n\t\tthis.#composer = new LineComposer({\n\t\t\tembedded: this.#options.embedded,\n\t\t\tcolumns: this.#options.columns,\n\t\t\talign: 'left',\n\t\t\t// size: 1,\n\n\t\t\tcallback: (value) => this.#queue.push(value)\n\t\t});\n\n\t\tthis.#reset();\n\t}\n\n\t/**\n\t * Reset the state of the object\n\t */\n\t#reset() {\n\t\tthis.#queue = [];\n\t\tthis.#codepage = this.#options.language == 'esc-pos' ? 'cp437' : 'star/standard';\n\t\tthis.#state.codepage = 0;\n\t\tthis.#state.font = 'A';\n\t}\n\n\t/**\n\t * Initialize the printer\n\t *\n\t * @return {object}          Return the object, for easy chaining commands\n\t *\n\t */\n\tinitialize(): ReceiptPrinterEncoder {\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('Initialize is not supported in table cells or boxes');\n\t\t}\n\n\t\tthis.#composer.raw(this.#language.initialize());\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Change the code page\n\t *\n\t * @param  {string}   codepage  The codepage that we set the printer to\n\t * @return {object}             Return the object, for easy chaining commands\n\t *\n\t */\n\tcodepage(codepage: string): ReceiptPrinterEncoder {\n\t\tif (codepage === 'auto') {\n\t\t\tthis.#codepage = codepage;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!CodepageEncoder.supports(codepage)) {\n\t\t\tthrow new Error('Unknown codepage');\n\t\t}\n\n\t\tif (typeof this.#codepageMapping[codepage] !== 'undefined') {\n\t\t\tthis.#codepage = codepage;\n\t\t} else {\n\t\t\tthrow new Error('Codepage not supported by printer');\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Print text\n\t *\n\t * @param  {string}   value  Text that needs to be printed\n\t * @return {object}          Return the object, for easy chaining commands\n\t *\n\t */\n\ttext(value: string): ReceiptPrinterEncoder {\n\t\tthis.#composer.text(value, this.#codepage);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Print a newline\n\t *\n\t * @param  {number|string}   value  The number of newlines that need to be printed, defaults to 1\n\t * @return {object}                 Return the object, for easy chaining commands\n\t *\n\t */\n\tnewline(value: number | string = 1): ReceiptPrinterEncoder {\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = parseInt(value, 10) || 1;\n\t\t}\n\n\t\tfor (let i = 0; i < value; i++) {\n\t\t\tthis.#composer.flush({ forceNewline: true });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Print text, followed by a newline\n\t *\n\t * @param  {string}   value  Text that needs to be printed\n\t * @return {object}          Return the object, for easy chaining commands\n\t *\n\t */\n\tline(value: string): ReceiptPrinterEncoder {\n\t\tthis.text(value);\n\t\tthis.newline();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Underline text\n\t *\n\t * @param  {boolean|number}   value  true to turn on underline, false to turn off, or 2 for double underline\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tunderline(value?: boolean): ReceiptPrinterEncoder {\n\t\tif (typeof value === 'undefined') {\n\t\t\tthis.#composer.style.underline = !this.#composer.style.underline;\n\t\t} else {\n\t\t\tthis.#composer.style.underline = value;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Italic text\n\t *\n\t * @param  {boolean}          value  true to turn on italic, false to turn off\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\titalic(value?: boolean): ReceiptPrinterEncoder {\n\t\tif (typeof value === 'undefined') {\n\t\t\tthis.#composer.style.italic = !this.#composer.style.italic;\n\t\t} else {\n\t\t\tthis.#composer.style.italic = value;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bold text\n\t *\n\t * @param  {boolean}          value  true to turn on bold, false to turn off\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tbold(value?: boolean): ReceiptPrinterEncoder {\n\t\tif (typeof value === 'undefined') {\n\t\t\tthis.#composer.style.bold = !this.#composer.style.bold;\n\t\t} else {\n\t\t\tthis.#composer.style.bold = value;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invert text\n\t *\n\t * @param  {boolean}          value  true to turn on white text on black, false to turn off\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tinvert(value?: boolean): ReceiptPrinterEncoder {\n\t\tif (typeof value === 'undefined') {\n\t\t\tthis.#composer.style.invert = !this.#composer.style.invert;\n\t\t} else {\n\t\t\tthis.#composer.style.invert = value;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Change width of text\n\t *\n\t * @param  {number}          width    The width of the text, 1 - 8\n\t * @return {object}                   Return the object, for easy chaining commands\n\t *\n\t */\n\twidth(width?: number): ReceiptPrinterEncoder {\n\t\tif (typeof width === 'undefined') {\n\t\t\twidth = 1;\n\t\t}\n\n\t\tif (typeof width !== 'number') {\n\t\t\tthrow new Error('Width must be a number');\n\t\t}\n\n\t\tif (width < 1 || width > 8) {\n\t\t\tthrow new Error('Width must be between 1 and 8');\n\t\t}\n\n\t\tthis.#composer.style.width = width;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Change height of text\n\t *\n\t * @param  {number}          height  The height of the text, 1 - 8\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\theight(height?: number): ReceiptPrinterEncoder {\n\t\tif (typeof height === 'undefined') {\n\t\t\theight = 1;\n\t\t}\n\n\t\tif (typeof height !== 'number') {\n\t\t\tthrow new Error('Height must be a number');\n\t\t}\n\n\t\tif (height < 1 || height > 8) {\n\t\t\tthrow new Error('Height must be between 1 and 8');\n\t\t}\n\n\t\tthis.#composer.style.height = height;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Change text size\n\t *\n\t * @param  {Number|string}   width   The width of the text, 1 - 8\n\t * @param  {Number}          height  The height of the text, 1 - 8\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tsize(width?: number | string, height?: number): ReceiptPrinterEncoder {\n\t\t/* Backwards compatiblity for changing the font */\n\t\tif (typeof width === 'string') {\n\t\t\treturn this.font(width === 'small' ? 'B' : 'A');\n\t\t}\n\n\t\tif (typeof height === 'undefined') {\n\t\t\theight = width;\n\t\t}\n\n\t\tthis.width(width);\n\t\tthis.height(height);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Choose different font\n\t *\n\t * @param  {string}          value   'A', 'B' or others\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tfont(value: string): ReceiptPrinterEncoder {\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('Changing fonts is not supported in table cells or boxes');\n\t\t}\n\n\t\tif (this.#composer.cursor > 0) {\n\t\t\tthrow new Error('Changing fonts is not supported in the middle of a line');\n\t\t}\n\n\t\t/* If size is specified, find the matching font */\n\n\t\tlet matchedFontType: FontType | undefined;\n\t\tconst matches = value.match(/^[0-9]+x[0-9]+$/);\n\t\tif (matches) {\n\t\t\tmatchedFontType = Object.entries(this.#printerCapabilities.fonts).find(\n\t\t\t\t(i) => i[1].size == matches[0]\n\t\t\t)?.[0] as FontType | undefined;\n\t\t}\n\n\t\t/* Make sure the font name is uppercase */\n\n\t\tmatchedFontType = (matchedFontType?.toUpperCase() || 'A') as FontType;\n\t\tconst matchedFont = this.#printerCapabilities.fonts[matchedFontType];\n\n\t\t/* Check if the font is supported */\n\n\t\tif (!matchedFont) {\n\t\t\treturn this.#error('This font is not supported by this printer', 'relaxed');\n\t\t}\n\n\t\t/* Change the font */\n\n\t\tthis.#composer.raw(this.#language.font(matchedFontType));\n\n\t\tthis.#state.font = matchedFontType;\n\n\t\t/* Change the width of the composer */\n\n\t\tif (matchedFontType === 'A') {\n\t\t\tthis.#composer.columns = this.#options.columns;\n\t\t} else {\n\t\t\tthis.#composer.columns =\n\t\t\t\t(this.#options.columns / this.#printerCapabilities.fonts['A'].columns) * matchedFont.columns;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Change text alignment\n\t *\n\t * @param  {string}          value   left, center or right\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\talign(value: TextAlign): ReceiptPrinterEncoder {\n\t\tconst alignments: TextAlign[] = ['left', 'center', 'right'];\n\n\t\tif (!alignments.includes(value)) {\n\t\t\tthrow new Error('Unknown alignment');\n\t\t}\n\n\t\tthis.#composer.align = value;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Insert a table\n\t *\n\t * @param  {array}           columns  The column definitions\n\t * @param  {array}           data     Array containing rows. Each row is an array containing cells.\n\t *                                    Each cell can be a string value, or a callback function.\n\t *                                    The first parameter of the callback is the encoder object on\n\t *                                    which the function can call its methods.\n\t * @return {object}                   Return the object, for easy chaining commands\n\t *\n\t */\n\ttable(\n\t\tcolumns: {\n\t\t\twidth: number;\n\t\t\talign: TextAlign;\n\t\t\tverticalAlign?: VerticalAlign;\n\t\t\tmarginLeft?: number;\n\t\t\tmarginRight?: number;\n\t\t}[],\n\t\tdata: (string | ((encoder: ReceiptPrinterEncoder) => void))[][]\n\t): ReceiptPrinterEncoder {\n\t\tthis.#composer.flush();\n\n\t\t/* Process all lines */\n\n\t\tfor (let r = 0; r < data.length; r++) {\n\t\t\tconst lines = [];\n\t\t\tlet maxLines = 0;\n\n\t\t\t/* Render all columns */\n\n\t\t\tfor (let c = 0; c < columns.length; c++) {\n\t\t\t\tconst columnEncoder = new ReceiptPrinterEncoder(\n\t\t\t\t\tObject.assign({}, this.#options, {\n\t\t\t\t\t\twidth: columns[c].width,\n\t\t\t\t\t\tembedded: true\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tconst cellData = data[r][c];\n\n\t\t\t\tcolumnEncoder.codepage(this.#codepage);\n\t\t\t\tcolumnEncoder.align(columns[c].align);\n\n\t\t\t\tif (typeof cellData === 'string') {\n\t\t\t\t\tcolumnEncoder.text(cellData);\n\t\t\t\t}\n\n\t\t\t\tif (typeof cellData === 'function') {\n\t\t\t\t\tcellData(columnEncoder);\n\t\t\t\t}\n\n\t\t\t\tconst cell = columnEncoder.commands();\n\n\t\t\t\t/* Determine the height in lines of the row */\n\n\t\t\t\tmaxLines = Math.max(maxLines, cell.length);\n\n\t\t\t\tlines[c] = cell;\n\t\t\t}\n\n\t\t\t/* Pad the cells in this line to the same height */\n\n\t\t\tfor (let c = 0; c < columns.length; c++) {\n\t\t\t\tif (lines[c].length >= maxLines) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (let p = lines[c].length; p < maxLines; p++) {\n\t\t\t\t\tlet verticalAlign = 'top';\n\t\t\t\t\tif (typeof columns[c].verticalAlign !== 'undefined') {\n\t\t\t\t\t\tverticalAlign = columns[c].verticalAlign as VerticalAlign;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst line: LineCommands = { commands: [{ type: 'space', size: columns[c].width }], height: 1 };\n\n\t\t\t\t\tif (verticalAlign == 'bottom') {\n\t\t\t\t\t\tlines[c].unshift(line);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines[c].push(line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Add the lines to the composer */\n\n\t\t\tfor (let l = 0; l < maxLines; l++) {\n\t\t\t\tfor (let c = 0; c < columns.length; c++) {\n\t\t\t\t\tif (typeof columns[c].marginLeft !== 'undefined') {\n\t\t\t\t\t\tthis.#composer.space(columns[c].marginLeft || 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.#composer.add(lines[c][l].commands, columns[c].width);\n\n\t\t\t\t\tif (typeof columns[c].marginRight !== 'undefined') {\n\t\t\t\t\t\tthis.#composer.space(columns[c].marginRight || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.#composer.flush();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Insert a horizontal rule\n\t *\n\t * @param  {object}          options  And object with the following properties:\n\t *                                    - style: The style of the line, either single or double\n\t *                                    - width: The width of the line, by default the width of the paper\n\t * @return {object}                   Return the object, for easy chaining commands\n\t *\n\t */\n\trule(options?: Partial<RuleOptions>): ReceiptPrinterEncoder {\n\t\tconst defaultOptions: RuleOptions = {\n\t\t\tstyle: 'single',\n\t\t\twidth: this.#options.columns || 10\n\t\t};\n\t\tconst mergedOptions = { ...defaultOptions, ...options };\n\n\t\tthis.#composer.flush();\n\n\t\tthis.#composer.text((mergedOptions.style === 'double' ? '═' : '─').repeat(mergedOptions.width), 'cp437');\n\t\tthis.#composer.flush();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Insert a box\n\t *\n\t * @param  {object}           options   And object with the following properties:\n\t *                                      - style: The style of the border, either single or double\n\t *                                      - width: The width of the box, by default the width of the paper\n\t *                                      - marginLeft: Space between the left border and the left edge\n\t *                                      - marginRight: Space between the right border and the right edge\n\t *                                      - paddingLeft: Space between the contents and the left border of the box\n\t *                                      - paddingRight: Space between the contents and the right border of the box\n\t * @param  {string|function}  contents  A string value, or a callback function.\n\t *                                      The first parameter of the callback is the encoder object on\n\t *                                      which the function can call its methods.\n\t * @return {object}                     Return the object, for easy chaining commands\n\t *\n\t */\n\tbox(\n\t\toptions: Partial<BoxOptions>,\n\t\tcontents: string | ((encoder: ReceiptPrinterEncoder) => void)\n\t): ReceiptPrinterEncoder {\n\t\tconst defaultOptions: BoxOptions = {\n\t\t\tstyle: 'single',\n\t\t\talign: 'left',\n\t\t\twidth: this.#options.columns,\n\t\t\tmarginLeft: 0,\n\t\t\tmarginRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingRight: 0\n\t\t};\n\t\tconst mergedOptions = { ...defaultOptions, ...options };\n\n\t\tif (mergedOptions.width + mergedOptions.marginLeft + mergedOptions.marginRight > this.#options.columns) {\n\t\t\tthrow new Error('Box is too wide');\n\t\t}\n\n\t\tlet elements: string[] = [];\n\n\t\tif (mergedOptions.style == 'single') {\n\t\t\telements = ['┌', '┐', '└', '┘', '─', '│'];\n\t\t} else if (mergedOptions.style == 'double') {\n\t\t\telements = ['╔', '╗', '╚', '╝', '═', '║'];\n\t\t}\n\n\t\t/* Render the contents of the box */\n\n\t\tconst columnEncoder = new ReceiptPrinterEncoder(\n\t\t\tObject.assign({}, this.#options, {\n\t\t\t\twidth:\n\t\t\t\t\tmergedOptions.width -\n\t\t\t\t\t(mergedOptions.style == 'none' ? 0 : 2) -\n\t\t\t\t\tmergedOptions.paddingLeft -\n\t\t\t\t\tmergedOptions.paddingRight,\n\t\t\t\tembedded: true\n\t\t\t})\n\t\t);\n\n\t\tcolumnEncoder.codepage(this.#codepage);\n\t\tcolumnEncoder.align(mergedOptions.align);\n\n\t\tif (typeof contents === 'function') {\n\t\t\tcontents(columnEncoder);\n\t\t}\n\n\t\tif (typeof contents === 'string') {\n\t\t\tcolumnEncoder.text(contents);\n\t\t}\n\n\t\tconst lines = columnEncoder.commands();\n\n\t\t/* Header */\n\n\t\tthis.#composer.flush();\n\n\t\tif (mergedOptions.style != 'none') {\n\t\t\tthis.#composer.space(mergedOptions.marginLeft);\n\t\t\tthis.#composer.text(elements[0], 'cp437');\n\t\t\tthis.#composer.text(elements[4].repeat(mergedOptions.width - 2), 'cp437');\n\t\t\tthis.#composer.text(elements[1], 'cp437');\n\t\t\tthis.#composer.space(mergedOptions.marginRight);\n\t\t\tthis.#composer.flush();\n\t\t}\n\n\t\t/* Content */\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tthis.#composer.space(mergedOptions.marginLeft);\n\n\t\t\tif (mergedOptions.style != 'none') {\n\t\t\t\tthis.#composer.style.height = lines[i].height;\n\t\t\t\tthis.#composer.text(elements[5], 'cp437');\n\t\t\t\tthis.#composer.style.height = 1;\n\t\t\t}\n\n\t\t\tthis.#composer.space(mergedOptions.paddingLeft);\n\t\t\tthis.#composer.add(\n\t\t\t\tlines[i].commands,\n\t\t\t\tmergedOptions.width -\n\t\t\t\t\t(mergedOptions.style == 'none' ? 0 : 2) -\n\t\t\t\t\tmergedOptions.paddingLeft -\n\t\t\t\t\tmergedOptions.paddingRight\n\t\t\t);\n\t\t\tthis.#composer.space(mergedOptions.paddingRight);\n\n\t\t\tif (mergedOptions.style != 'none') {\n\t\t\t\tthis.#composer.style.height = lines[i].height;\n\t\t\t\tthis.#composer.text(elements[5], 'cp437');\n\t\t\t\tthis.#composer.style.height = 1;\n\t\t\t}\n\n\t\t\tthis.#composer.space(mergedOptions.marginRight);\n\t\t\tthis.#composer.flush();\n\t\t}\n\n\t\t/* Footer */\n\n\t\tif (mergedOptions.style != 'none') {\n\t\t\tthis.#composer.space(mergedOptions.marginLeft);\n\t\t\tthis.#composer.text(elements[2], 'cp437');\n\t\t\tthis.#composer.text(elements[4].repeat(mergedOptions.width - 2), 'cp437');\n\t\t\tthis.#composer.text(elements[3], 'cp437');\n\t\t\tthis.#composer.space(mergedOptions.marginRight);\n\t\t\tthis.#composer.flush();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Barcode\n\t *\n\t * @param  {string}           value  the value of the barcode\n\t * @param  {string|number}           symbology  the type of the barcode\n\t * @param  {number|object}    height  Either the configuration object, or backwards compatible height of the barcode\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tbarcode(\n\t\tvalue: string,\n\t\tsymbology: string | number,\n\t\theight?: number | Partial<BarcodeOptions>\n\t): ReceiptPrinterEncoder {\n\t\tlet options: BarcodeOptions = {\n\t\t\theight: 60,\n\t\t\twidth: 2,\n\t\t\ttext: false\n\t\t};\n\n\t\tif (typeof height === 'object') {\n\t\t\toptions = Object.assign(options, height);\n\t\t}\n\n\t\tif (typeof height === 'number') {\n\t\t\toptions.height = height;\n\t\t}\n\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('Barcodes are not supported in table cells or boxes');\n\t\t}\n\n\t\tif (this.#printerCapabilities.barcodes.supported === false) {\n\t\t\treturn this.#error('Barcodes are not supported by this printer', 'relaxed');\n\t\t}\n\n\t\tif (typeof symbology === 'string' && !this.#printerCapabilities.barcodes.symbologies.includes(symbology)) {\n\t\t\treturn this.#error(`Symbology '${symbology}' not supported by this printer`, 'relaxed');\n\t\t}\n\n\t\t/* Force printing the print buffer and moving to a new line */\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\t/* Set alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align(this.#composer.align));\n\t\t}\n\n\t\t/* Barcode */\n\n\t\tthis.#composer.raw(this.#language.barcode(value, symbology, options));\n\n\t\t/* Reset alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align('left'));\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * QR code\n\t *\n\t * @param  {string}           value       The value of the qr code\n\t * @param  {number|object}    model       Either the configuration object, or\n\t *                                        backwards compatible model of the qrcode, either 1 or 2\n\t * @param  {number}           size        Backwards compatible size of the qrcode, a value between 1 and 8\n\t * @param  {string}           errorlevel  Backwards compatible the amount of error correction used,\n\t *                                        either 'l', 'm', 'q', 'h'\n\t * @return {object}                       Return the object, for easy chaining commands\n\t */\n\tqrcode(\n\t\tvalue: string,\n\t\tmodel?: QrCodeModel | Partial<QrCodeOptions>,\n\t\tsize?: QrCodeSize,\n\t\terrorlevel?: QrCodeErrorLevel\n\t): ReceiptPrinterEncoder {\n\t\tlet options: QrCodeOptions = {\n\t\t\tmodel: 2,\n\t\t\tsize: 6,\n\t\t\terrorlevel: 'm'\n\t\t};\n\n\t\tif (typeof model === 'object') {\n\t\t\toptions = Object.assign(options, model);\n\t\t}\n\n\t\tif (typeof model === 'number') {\n\t\t\toptions.model = model;\n\t\t}\n\n\t\tif (typeof size === 'number') {\n\t\t\toptions.size = size;\n\t\t}\n\n\t\tif (typeof errorlevel === 'string') {\n\t\t\toptions.errorlevel = errorlevel;\n\t\t}\n\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('QR codes are not supported in table cells or boxes');\n\t\t}\n\n\t\tif (this.#printerCapabilities.qrcode.supported === false) {\n\t\t\treturn this.#error('QR codes are not supported by this printer', 'relaxed');\n\t\t}\n\n\t\tif (options.model && !this.#printerCapabilities.qrcode.models.includes(String(options.model))) {\n\t\t\treturn this.#error('QR code model is not supported by this printer', 'relaxed');\n\t\t}\n\n\t\t/* Force printing the print buffer and moving to a new line */\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\t/* Set alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align(this.#composer.align));\n\t\t}\n\n\t\t/* QR code */\n\n\t\tthis.#composer.raw(this.#language.qrcode(value, options));\n\n\t\t/* Reset alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align('left'));\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * PDF417 code\n\t *\n\t * @param  {string}           value     The value of the qr code\n\t * @param  {object}           options   Configuration object\n\t * @return {object}                     Return the object, for easy chaining commands\n\t *\n\t */\n\tpdf417(value: string, options: Partial<Pdf417Options>): ReceiptPrinterEncoder {\n\t\tconst defaultOptions: Pdf417Options = {\n\t\t\twidth: 3,\n\t\t\theight: 3,\n\t\t\tcolumns: 0,\n\t\t\trows: 0,\n\t\t\terrorlevel: 1,\n\t\t\ttruncated: false\n\t\t};\n\t\tconst mergedOptions = { ...defaultOptions, ...options };\n\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('PDF417 codes are not supported in table cells or boxes');\n\t\t}\n\n\t\tif (this.#printerCapabilities.pdf417.supported === false) {\n\t\t\t/* If possible, fallback to a barcode with symbology */\n\n\t\t\tif (typeof this.#printerCapabilities.pdf417.fallback === 'object') {\n\t\t\t\treturn this.barcode(value, this.#printerCapabilities.pdf417.fallback.symbology);\n\t\t\t}\n\n\t\t\treturn this.#error('PDF417 codes are not supported by this printer', 'relaxed');\n\t\t}\n\n\t\t/* Force printing the print buffer and moving to a new line */\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\t/* Set alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align(this.#composer.align));\n\t\t}\n\n\t\t/* PDF417 code */\n\n\t\tthis.#composer.raw(this.#language.pdf417(value, mergedOptions));\n\n\t\t/* Reset alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align('left'));\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Image\n\t *\n\t * @param  {object}         input  an element, like a canvas or image that needs to be printed\n\t * @param  {number}         width  width of the image on the printer\n\t * @param  {number}         height  height of the image on the printer\n\t * @param  {string}         algorithm  the dithering algorithm for making the image black and white\n\t * @param  {number}         threshold  threshold for the dithering algorithm\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\timage(input: any, width: number, height: number, algorithm?: string, threshold?: number): ReceiptPrinterEncoder {\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('Images are not supported in table cells or boxes');\n\t\t}\n\n\t\tif (width % 8 !== 0) {\n\t\t\tthrow new Error('Width must be a multiple of 8');\n\t\t}\n\n\t\tif (height % 8 !== 0) {\n\t\t\tthrow new Error('Height must be a multiple of 8');\n\t\t}\n\n\t\tif (typeof algorithm === 'undefined') {\n\t\t\talgorithm = 'threshold';\n\t\t}\n\n\t\tif (typeof threshold === 'undefined') {\n\t\t\tthreshold = 128;\n\t\t}\n\n\t\t/* Determine the type of the input */\n\n\t\tconst name = input.constructor.name;\n\t\tlet type;\n\n\t\tname.endsWith('Element') ? (type = 'element') : null;\n\t\tname == 'ImageData' ? (type = 'imagedata') : null;\n\t\tname == 'Canvas' && typeof input.getContext !== 'undefined' ? (type = 'node-canvas') : null;\n\t\tname == 'Image' ? (type = 'node-canvas-image') : null;\n\t\tname == 'Image' && typeof input.frames !== 'undefined' ? (type = 'node-read-image') : null;\n\t\tname == 'Object' && input.data && input.info ? (type = 'node-sharp') : null;\n\t\tname == 'View3duint8' && input.data && input.shape ? (type = 'ndarray') : null;\n\t\tname == 'Object' && input.data && input.width && input.height ? (type = 'object') : null;\n\n\t\tif (!type) {\n\t\t\tthrow new Error('Could not determine the type of image input');\n\t\t}\n\n\t\t/* Turn provided data into an ImageData object */\n\n\t\tlet image;\n\n\t\tif (type == 'element') {\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\tconst context = canvas.getContext('2d');\n\t\t\tif (context) {\n\t\t\t\tcontext.drawImage(input, 0, 0, width, height);\n\t\t\t\timage = context.getImageData(0, 0, width, height);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Failed to get 2D rendering context');\n\t\t\t}\n\t\t}\n\n\t\tif (type == 'node-canvas') {\n\t\t\tconst context = input.getContext('2d');\n\t\t\timage = context.getImageData(0, 0, input.width, input.height);\n\t\t}\n\n\t\tif (type == 'node-canvas-image') {\n\t\t\tif (typeof this.#options.createCanvas !== 'function') {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Canvas is not supported in this environment, specify a createCanvas function in the options'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst canvas = this.#options.createCanvas(width, height);\n\t\t\tconst context = canvas.getContext('2d');\n\t\t\tcontext.drawImage(input, 0, 0, width, height);\n\t\t\timage = context.getImageData(0, 0, width, height);\n\t\t}\n\n\t\tif (type == 'node-read-image') {\n\t\t\timage = new ImageData(input.width, input.height);\n\t\t\timage.data.set(input.frames[0].data);\n\t\t}\n\n\t\tif (type == 'node-sharp') {\n\t\t\timage = new ImageData(input.info.width, input.info.height);\n\t\t\timage.data.set(input.data);\n\t\t}\n\n\t\tif (type == 'ndarray') {\n\t\t\timage = new ImageData(input.shape[0], input.shape[1]);\n\t\t\timage.data.set(input.data);\n\t\t}\n\n\t\tif (type == 'object') {\n\t\t\timage = new ImageData(input.width, input.height);\n\t\t\timage.data.set(input.data);\n\t\t}\n\n\t\tif (type == 'imagedata') {\n\t\t\timage = input;\n\t\t}\n\n\t\tif (!image) {\n\t\t\tthrow new Error('Image could not be loaded');\n\t\t}\n\n\t\t/* Resize image */\n\n\t\tif (width !== image.width || height !== image.height) {\n\t\t\timage = resizeImageData(image, width, height, 'bilinear-interpolation');\n\t\t}\n\n\t\t/* Check if the image has the correct dimensions */\n\n\t\tif (width !== image.width || height !== image.height) {\n\t\t\tthrow new Error('Image could not be resized');\n\t\t}\n\n\t\t/* Flatten the image and dither it */\n\n\t\timage = Flatten.flatten(image, [0xff, 0xff, 0xff]);\n\n\t\tswitch (algorithm) {\n\t\t\tcase 'threshold':\n\t\t\t\timage = Dither.threshold(image, threshold);\n\t\t\t\tbreak;\n\t\t\tcase 'bayer':\n\t\t\t\timage = Dither.bayer(image, threshold);\n\t\t\t\tbreak;\n\t\t\tcase 'floydsteinberg':\n\t\t\t\timage = Dither.floydsteinberg(image);\n\t\t\t\tbreak;\n\t\t\tcase 'atkinson':\n\t\t\t\timage = Dither.atkinson(image);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\t/* Set alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align(this.#composer.align));\n\t\t}\n\n\t\t/* Encode the image data */\n\n\t\tthis.#composer.raw(this.#language.image(image, width, height, this.#options.imageMode));\n\n\t\t/* Reset alignment */\n\n\t\tif (this.#composer.align !== 'left') {\n\t\t\tthis.#composer.raw(this.#language.align('left'));\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cut paper\n\t *\n\t * @param  {string}          value   full or partial. When not specified a full cut will be assumed\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tcut(value?: 'full' | 'partial'): ReceiptPrinterEncoder {\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('Cut is not supported in table cells or boxes');\n\t\t}\n\n\t\tfor (let i = 0; i < this.#options.feedBeforeCut; i++) {\n\t\t\tthis.#composer.flush({ forceNewline: true });\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\tthis.#composer.raw(this.#language.cut(value));\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pulse\n\t *\n\t * @param  {number}          device  0 or 1 for on which pin the device is connected, default of 0\n\t * @param  {number}          on      Time the pulse is on in milliseconds, default of 100\n\t * @param  {number}          off     Time the pulse is off in milliseconds, default of 500\n\t * @return {object}                  Return the object, for easy chaining commands\n\t *\n\t */\n\tpulse(device?: number, on?: number, off?: number): ReceiptPrinterEncoder {\n\t\tif (this.#options.embedded) {\n\t\t\tthrow new Error('Pulse is not supported in table cells or boxes');\n\t\t}\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\tthis.#composer.raw(this.#language.pulse(device, on, off));\n\n\t\tthis.#composer.flush({ forceFlush: true, ignoreAlignment: true });\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add raw printer commands\n\t *\n\t * @param  {array}           data   raw bytes to be included\n\t * @return {object}          Return the object, for easy chaining commands\n\t *\n\t */\n\traw(data: number[]): ReceiptPrinterEncoder {\n\t\tthis.#composer.raw(data);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal function for encoding style changes\n\t * @param  {string}          property  The property that needs to be changed\n\t * @param  {boolean}         value     Is the property enabled or disabled\n\t * @return {array}                     Return the encoded bytes\n\t */\n\t#encodeStyle(property: StyleProperty | 'size', value: boolean | Size): Command {\n\t\tif (property === 'bold') {\n\t\t\treturn this.#language.bold(value as boolean);\n\t\t}\n\n\t\tif (property === 'underline') {\n\t\t\treturn this.#language.underline(value as boolean);\n\t\t}\n\n\t\tif (property === 'italic') {\n\t\t\treturn this.#language.italic(value as boolean);\n\t\t}\n\n\t\tif (property === 'invert') {\n\t\t\treturn this.#language.invert(value as boolean);\n\t\t}\n\n\t\tif (property === 'size') {\n\t\t\treturn this.#language.size((value as Size).width, (value as Size).height);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Internal function for encoding text in the correct codepage\n\t * @param  {string}          value  The text that needs to be encoded\n\t * @param  {string}          codepage  The codepage that needs to be used\n\t * @return {array}                   Return the encoded bytes\n\t */\n\t#encodeText(value: string, codepage: string): number[] {\n\t\tif (codepage !== 'auto') {\n\t\t\tconst fragment = CodepageEncoder.encode(value, codepage);\n\n\t\t\tif (this.#state.codepage != this.#codepageMapping[codepage]) {\n\t\t\t\tthis.#state.codepage = this.#codepageMapping[codepage];\n\n\t\t\t\treturn [...this.#language.codepage(this.#codepageMapping[codepage]), ...fragment];\n\t\t\t}\n\n\t\t\treturn [...fragment];\n\t\t}\n\n\t\tconst fragments = CodepageEncoder.autoEncode(value, this.#codepageCandidates);\n\t\tconst buffer = [];\n\n\t\tfor (const fragment of fragments) {\n\t\t\tthis.#state.codepage = this.#codepageMapping[fragment.codepage];\n\t\t\tbuffer.push(...this.#language.codepage(this.#codepageMapping[fragment.codepage]), ...fragment.bytes);\n\t\t}\n\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * Get all the commands\n\t *\n\t * @return {array}         All the commands currently in the queue\n\t */\n\tcommands(): CommandQueue {\n\t\t/* Flush the printer line buffer if needed */\n\n\t\tif (this.#options.autoFlush && !this.#options.embedded) {\n\t\t\tthis.#composer.raw(this.#language.flush());\n\t\t}\n\n\t\tconst result: CommandQueue = [];\n\n\t\tconst remaining = this.#composer.fetch({ forceFlush: true, ignoreAlignment: true });\n\n\t\tif (remaining.length) {\n\t\t\tthis.#queue.push(remaining);\n\t\t}\n\n\t\t/* Process all lines in the queue */\n\n\t\twhile (this.#queue.length) {\n\t\t\tconst line = this.#queue.shift() as BufferItem[];\n\t\t\tconst height = line\n\t\t\t\t.filter((i) => i.type === 'style' && i.property === 'size')\n\t\t\t\t.map((i) => i.value.height)\n\t\t\t\t.reduce((a, b) => Math.max(a, b), 1);\n\n\t\t\tif (this.#options.debug) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'|' +\n\t\t\t\t\t\tline\n\t\t\t\t\t\t\t.filter((i) => i.type === 'text')\n\t\t\t\t\t\t\t.map((i) => i.value)\n\t\t\t\t\t\t\t.join('') +\n\t\t\t\t\t\t'|',\n\t\t\t\t\theight\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tresult.push({\n\t\t\t\tcommands: line,\n\t\t\t\theight: height\n\t\t\t});\n\t\t}\n\n\t\tif (this.#options.debug) {\n\t\t\tconsole.log('commands', result);\n\t\t}\n\n\t\tthis.#reset();\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Encode all previous commands\n\t *\n\t * @return {Uint8Array}         Return the encoded bytes\n\t */\n\tencode(): Uint8Array {\n\t\tconst commands = this.commands();\n\t\tconst result: CommandArray = [];\n\n\t\tfor (const line of commands) {\n\t\t\tfor (const item of line.commands) {\n\t\t\t\tif (item.type === 'raw') {\n\t\t\t\t\tresult.push(item.value);\n\t\t\t\t}\n\n\t\t\t\tif (item.type === 'text') {\n\t\t\t\t\tresult.push(this.#encodeText(item.value, item.codepage ?? 'auto'));\n\t\t\t\t}\n\n\t\t\t\tif (item.type === 'style') {\n\t\t\t\t\tresult.push(this.#encodeStyle(item.property, item.value));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.#options.newline === '\\n\\r') {\n\t\t\t\tresult.push([0x0a, 0x0d]);\n\t\t\t}\n\n\t\t\tif (this.#options.newline === '\\n') {\n\t\t\t\tresult.push([0x0a]);\n\t\t\t}\n\t\t}\n\n\t\treturn Uint8Array.from(result.flat());\n\t}\n\n\t/**\n\t * Throw an error\n\t *\n\t * @param  {string}          message  The error message\n\t * @param  {string}          level    The error level, if level is strict,\n\t *                                    an error will be thrown, if level is relaxed,\n\t *                                    a warning will be logged\n\t * @return {object}          Return the object, for easy chaining commands\n\t */\n\t#error(message: string, level: ErrorLevel): ReceiptPrinterEncoder {\n\t\tif (level === 'strict' || this.#options.errors === 'strict') {\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\tconsole.warn(message);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get all supported printer models\n\t *\n\t * @return {object}         An object with all supported printer models\n\t */\n\tstatic get printerModels(): { id: string; name: string }[] {\n\t\treturn Object.entries(printerDefinitions).map((i) => ({ id: i[0], name: i[1].vendor + ' ' + i[1].model }));\n\t}\n\n\t/**\n\t * Get the current column width\n\t *\n\t * @return {number}         The column width in characters\n\t */\n\tget columns(): number {\n\t\treturn this.#composer.columns;\n\t}\n\n\t/**\n\t * Get the current language\n\t * @return {string}         The language that is currently used\n\t */\n\tget language(): string {\n\t\treturn this.#options.language;\n\t}\n\n\t/**\n\t * Get the capabilities of the printer\n\t * @return {object}         The capabilities of the printer\n\t */\n\tget printerCapabilities(): PrinterCapabilities {\n\t\treturn this.#printerCapabilities;\n\t}\n}\n\nexport default ReceiptPrinterEncoder;\n","import CodepageEncoder from '@point-of-sale/codepage-encoder';\nimport {\n\tTextAlign,\n\tBarcodeOptions,\n\tImageMode,\n\tPdf417Options,\n\tQrCodeOptions,\n\tCommandArray,\n\tCommand\n} from '../types/printers';\n\nclass LanguageEscPos {\n\t/**\n\t * Initialize the printer\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tinitialize(): CommandArray {\n\t\treturn [\n\t\t\t/* Initialize printer */\n\t\t\t[0x1b, 0x40],\n\n\t\t\t/* Cancel Kanji mode */\n\t\t\t[0x1c, 0x2e],\n\n\t\t\t/* Set the font to A */\n\t\t\t[0x1b, 0x4d, 0x00]\n\t\t];\n\t}\n\n\t/**\n\t * Change the font\n\t * @param {string} type     Font type ('A', 'B', or more)\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tfont(type: string): Command {\n\t\tlet value = type.charCodeAt(0) - 0x41;\n\n\t\treturn [0x1b, 0x4d, value];\n\t}\n\n\t/**\n\t * Change the alignment\n\t * @param {string} value    Alignment value ('left', 'center', 'right')\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\talign(value?: TextAlign): Command {\n\t\tlet align: number;\n\n\t\tswitch (value) {\n\t\t\tcase 'center':\n\t\t\t\talign = 0x01;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\talign = 0x02;\n\t\t\t\tbreak;\n\t\t\tcase 'left':\n\t\t\tdefault:\n\t\t\t\talign = 0x00;\n\t\t}\n\n\t\treturn [0x1b, 0x61, align];\n\t}\n\n\t/**\n\t * Generate a barcode\n\t * @param {string} value        Value to encode\n\t * @param {string|number} symbology    Barcode symbology\n\t * @param {object} options      Configuration object\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\tbarcode(value: string, symbology: string | number, options: BarcodeOptions): CommandArray {\n\t\tlet result: CommandArray = [];\n\n\t\tconst symbologies: Record<string, number> = {\n\t\t\t'upca': 0x00,\n\t\t\t'upce': 0x01,\n\t\t\t'ean13': 0x02,\n\t\t\t'ean8': 0x03,\n\t\t\t'code39': 0x04,\n\t\t\t'coda39': 0x04 /* typo, leave here for backwards compatibility */,\n\t\t\t'itf': 0x05,\n\t\t\t'interleaved-2-of-5': 0x05,\n\t\t\t'nw-7': 0x06,\n\t\t\t'codabar': 0x06,\n\t\t\t'code93': 0x48,\n\t\t\t'code128': 0x49,\n\t\t\t'gs1-128': 0x48,\n\t\t\t'gs1-databar-omni': 0x4b,\n\t\t\t'gs1-databar-truncated': 0x4c,\n\t\t\t'gs1-databar-limited': 0x4d,\n\t\t\t'gs1-databar-expanded': 0x4e,\n\t\t\t'code128-auto': 0x4f\n\t\t};\n\n\t\tif (typeof symbology === 'string' && typeof symbologies[symbology] === 'undefined') {\n\t\t\tthrow new Error(`Symbology '${symbology}' not supported by language`);\n\t\t}\n\n\t\t/* Calculate segment width */\n\n\t\tif (options.width < 1 || options.width > 3) {\n\t\t\tthrow new Error('Width must be between 1 and 3');\n\t\t}\n\n\t\tlet width = options.width + 1;\n\n\t\tif (symbology === 'itf') {\n\t\t\twidth = options.width * 2;\n\t\t}\n\n\t\tif (\n\t\t\tsymbology === 'gs1-128' ||\n\t\t\tsymbology == 'gs1-databar-omni' ||\n\t\t\tsymbology == 'gs1-databar-truncated' ||\n\t\t\tsymbology == 'gs1-databar-limited' ||\n\t\t\tsymbology == 'gs1-databar-expanded'\n\t\t) {\n\t\t\twidth = options.width;\n\t\t}\n\n\t\t/* Set barcode options */\n\n\t\tresult.push([0x1d, 0x68, options.height], [0x1d, 0x77, width], [0x1d, 0x48, options.text ? 0x02 : 0x00]);\n\n\t\t/* Encode barcode */\n\n\t\tif (symbology == 'code128' && !value.startsWith('{')) {\n\t\t\tvalue = '{B' + value;\n\t\t}\n\n\t\tif (symbology == 'gs1-128') {\n\t\t\tconsole.log('gs1-128', value, value.replace(/[\\(\\)\\*]/g, ''));\n\t\t\tvalue = value.replace(/[\\(\\)\\*]/g, '');\n\t\t}\n\n\t\tconst bytes = CodepageEncoder.encode(value, 'ascii');\n\n\t\tconst identifier = typeof symbology === 'string' ? symbologies[symbology] : symbology;\n\n\t\tif (identifier > 0x40) {\n\t\t\t/* Function B symbologies */\n\n\t\t\tresult.push([0x1d, 0x6b, identifier, bytes.length, ...bytes]);\n\t\t} else {\n\t\t\t/* Function A symbologies */\n\n\t\t\tresult.push([0x1d, 0x6b, identifier, ...bytes, 0x00]);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Generate a QR code\n\t * @param {string} value        Value to encode\n\t * @param {object} options      Configuration object\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\tqrcode(value: string, options: QrCodeOptions): CommandArray {\n\t\tlet result: CommandArray = [];\n\n\t\t/* Model */\n\n\t\tif (typeof options.model === 'number') {\n\t\t\tconst models = {\n\t\t\t\t1: 0x31,\n\t\t\t\t2: 0x32\n\t\t\t};\n\n\t\t\tif (options.model in models) {\n\t\t\t\tresult.push([0x1d, 0x28, 0x6b, 0x04, 0x00, 0x31, 0x41, models[options.model], 0x00]);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Model must be 1 or 2');\n\t\t\t}\n\t\t}\n\n\t\t/* Size */\n\n\t\tif (typeof options.size !== 'number') {\n\t\t\tthrow new Error('Size must be a number');\n\t\t}\n\n\t\tif (options.size < 1 || options.size > 8) {\n\t\t\tthrow new Error('Size must be between 1 and 8');\n\t\t}\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x31, 0x43, options.size]);\n\n\t\t/* Error level */\n\n\t\tconst errorlevels: Record<string, number> = {\n\t\t\tl: 0x30,\n\t\t\tm: 0x31,\n\t\t\tq: 0x32,\n\t\t\th: 0x33\n\t\t};\n\n\t\tif (options.errorlevel in errorlevels) {\n\t\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x31, 0x45, errorlevels[options.errorlevel]]);\n\t\t} else {\n\t\t\tthrow new Error('Error level must be l, m, q or h');\n\t\t}\n\n\t\t/* Data */\n\n\t\tconst bytes = CodepageEncoder.encode(value, 'iso8859-1');\n\t\tconst length = bytes.length + 3;\n\n\t\tresult.push([0x1d, 0x28, 0x6b, length & 0xff, (length >> 8) & 0xff, 0x31, 0x50, 0x30, ...bytes]);\n\n\t\t/* Print QR code */\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x31, 0x51, 0x30]);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Generate a PDF417 code\n\t * @param {string} value        Value to encode\n\t * @param {object} options      Configuration object\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\tpdf417(value: string, options: Pdf417Options): CommandArray {\n\t\tlet result = [];\n\n\t\t/* Columns */\n\n\t\tif (typeof options.columns !== 'number') {\n\t\t\tthrow new Error('Columns must be a number');\n\t\t}\n\n\t\tif (options.columns !== 0 && (options.columns < 1 || options.columns > 30)) {\n\t\t\tthrow new Error('Columns must be 0, or between 1 and 30');\n\t\t}\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x30, 0x41, options.columns]);\n\n\t\t/* Rows */\n\n\t\tif (typeof options.rows !== 'number') {\n\t\t\tthrow new Error('Rows must be a number');\n\t\t}\n\n\t\tif (options.rows !== 0 && (options.rows < 3 || options.rows > 90)) {\n\t\t\tthrow new Error('Rows must be 0, or between 3 and 90');\n\t\t}\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x30, 0x42, options.rows]);\n\n\t\t/* Width */\n\n\t\tif (typeof options.width !== 'number') {\n\t\t\tthrow new Error('Width must be a number');\n\t\t}\n\n\t\tif (options.width < 2 || options.width > 8) {\n\t\t\tthrow new Error('Width must be between 2 and 8');\n\t\t}\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x30, 0x43, options.width]);\n\n\t\t/* Height */\n\n\t\tif (typeof options.height !== 'number') {\n\t\t\tthrow new Error('Height must be a number');\n\t\t}\n\n\t\tif (options.height < 2 || options.height > 8) {\n\t\t\tthrow new Error('Height must be between 2 and 8');\n\t\t}\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x30, 0x44, options.height]);\n\n\t\t/* Error level */\n\n\t\tif (typeof options.errorlevel !== 'number') {\n\t\t\tthrow new Error('Errorlevel must be a number');\n\t\t}\n\n\t\tif (options.errorlevel < 0 || options.errorlevel > 8) {\n\t\t\tthrow new Error('Errorlevel must be between 0 and 8');\n\t\t}\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x04, 0x00, 0x30, 0x45, 0x30, options.errorlevel + 0x30]);\n\n\t\t/* Model: standard or truncated */\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x30, 0x46, options.truncated ? 0x01 : 0x00]);\n\n\t\t/* Data */\n\n\t\tconst bytes = CodepageEncoder.encode(value, 'ascii');\n\t\tconst length = bytes.length + 3;\n\n\t\tresult.push([0x1d, 0x28, 0x6b, length & 0xff, (length >> 8) & 0xff, 0x30, 0x50, 0x30, ...bytes]);\n\n\t\t/* Print PDF417 code */\n\n\t\tresult.push([0x1d, 0x28, 0x6b, 0x03, 0x00, 0x30, 0x51, 0x30]);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Encode an image\n\t * @param {ImageData} image     ImageData object\n\t * @param {number} width        Width of the image\n\t * @param {number} height       Height of the image\n\t * @param {string} mode         Image encoding mode ('column' or 'raster')\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\timage(image: ImageData, width: number, height: number, mode: ImageMode): CommandArray {\n\t\tlet result = [];\n\n\t\tconst getPixel = (x: number, y: number) =>\n\t\t\tx < width && y < height ? (image.data[(width * y + x) * 4] > 0 ? 0 : 1) : 0;\n\n\t\tconst getColumnData = (width: number, height: number) => {\n\t\t\tconst data = [];\n\n\t\t\tfor (let s = 0; s < Math.ceil(height / 24); s++) {\n\t\t\t\tconst bytes = new Uint8Array(width * 3);\n\n\t\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\t\tfor (let c = 0; c < 3; c++) {\n\t\t\t\t\t\tfor (let b = 0; b < 8; b++) {\n\t\t\t\t\t\t\tbytes[x * 3 + c] |= getPixel(x, s * 24 + b + 8 * c) << (7 - b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdata.push(bytes);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tconst getRowData = (width: number, height: number) => {\n\t\t\tconst bytes = new Uint8Array((width * height) >> 3);\n\n\t\t\tfor (let y = 0; y < height; y++) {\n\t\t\t\tfor (let x = 0; x < width; x = x + 8) {\n\t\t\t\t\tfor (let b = 0; b < 8; b++) {\n\t\t\t\t\t\tbytes[y * (width >> 3) + (x >> 3)] |= getPixel(x + b, y) << (7 - b);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t};\n\n\t\t/* Encode images with ESC * */\n\n\t\tif (mode == 'column') {\n\t\t\tresult.push([0x1b, 0x33, 0x24]);\n\n\t\t\tgetColumnData(width, height).forEach((bytes) => {\n\t\t\t\tresult.push([0x1b, 0x2a, 0x21, width & 0xff, (width >> 8) & 0xff, ...bytes, 0x0a]);\n\t\t\t});\n\n\t\t\tresult.push([0x1b, 0x32]);\n\t\t}\n\n\t\t/* Encode images with GS v */\n\n\t\tif (mode == 'raster') {\n\t\t\tresult.push([\n\t\t\t\t0x1d,\n\t\t\t\t0x76,\n\t\t\t\t0x30,\n\t\t\t\t0x00,\n\t\t\t\t(width >> 3) & 0xff,\n\t\t\t\t((width >> 3) >> 8) & 0xff,\n\t\t\t\theight & 0xff,\n\t\t\t\t(height >> 8) & 0xff,\n\t\t\t\t...getRowData(width, height)\n\t\t\t]);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Cut the paper\n\t * @param {string} value    Cut type ('full' or 'partial')\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tcut(value?: 'full' | 'partial'): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value == 'partial') {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1d, 0x56, data];\n\t}\n\n\t/**\n\t * Send a pulse to the cash drawer\n\t * @param {number} device   Device number\n\t * @param {number} on       Pulse ON time\n\t * @param {number} off      Pulse OFF time\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tpulse(device?: number, on?: number, off?: number): Command {\n\t\tif (typeof device === 'undefined') {\n\t\t\tdevice = 0;\n\t\t}\n\n\t\tif (typeof on === 'undefined') {\n\t\t\ton = 100;\n\t\t}\n\n\t\tif (typeof off === 'undefined') {\n\t\t\toff = 500;\n\t\t}\n\n\t\ton = Math.min(500, Math.round(on / 2));\n\t\toff = Math.min(500, Math.round(off / 2));\n\n\t\treturn [0x1b, 0x70, device ? 1 : 0, on & 0xff, off & 0xff];\n\t}\n\n\t/**\n\t * Enable or disable bold text\n\t * @param {boolean} value   Enable or disable bold text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tbold(value?: boolean): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value) {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1b, 0x45, data];\n\t}\n\n\t/**\n\t * Enable or disable underline text\n\t * @param {boolean} value   Enable or disable underline text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tunderline(value?: boolean): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value) {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1b, 0x2d, data];\n\t}\n\n\t/**\n\t * Enable or disable italic text\n\t * @param {boolean} value   Enable or disable italic text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\titalic(value?: boolean): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value) {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1b, 0x34, data];\n\t}\n\n\t/**\n\t * Enable or disable inverted text\n\t * @param {boolean} value   Enable or disable inverted text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tinvert(value?: boolean): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value) {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1d, 0x42, data];\n\t}\n\n\t/**\n\t * Change text size\n\t * @param {number} width    Width of the text (1-8)\n\t * @param {number} height   Height of the text (1-8)\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tsize(width: number, height: number): Command {\n\t\treturn [0x1d, 0x21, (height - 1) | ((width - 1) << 4)];\n\t}\n\n\t/**\n\t * Change the codepage\n\t * @param {number} value    Codepage value\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tcodepage(value: number): Command {\n\t\treturn [0x1b, 0x74, value];\n\t}\n\n\t/**\n\t * Flush the printers line buffer\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tflush(): Command {\n\t\treturn [];\n\t}\n}\n\nexport default LanguageEscPos;\n","import CodepageEncoder from '@point-of-sale/codepage-encoder';\nimport {\n\tTextAlign,\n\tBarcodeOptions,\n\tFontType,\n\tImageMode,\n\tPdf417Options,\n\tQrCodeOptions,\n\tCommandArray,\n\tCommand\n} from '../types/printers';\n\nclass LanguageStarPrnt {\n\t/**\n\t * Initialize the printer\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tinitialize(): Command {\n\t\treturn [\n\t\t\t/* Initialize printer */\n\t\t\t0x1b, 0x40, 0x18\n\t\t];\n\t}\n\n\t/**\n\t * Change the font\n\t * @param {string} type     Font type ('A', 'B' or 'C')\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tfont(type: FontType): Command {\n\t\tlet value: number;\n\n\t\tswitch (type) {\n\t\t\tcase 'B':\n\t\t\t\tvalue = 0x01;\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tvalue = 0x02;\n\t\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\tdefault:\n\t\t\t\tvalue = 0x00;\n\t\t}\n\n\t\treturn [0x1b, 0x1e, 0x46, value];\n\t}\n\n\t/**\n\t * Change the alignment\n\t * @param {string} value    Alignment value ('left', 'center', 'right')\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\talign(value: TextAlign): Command {\n\t\tlet align = 0x00;\n\n\t\tif (value === 'center') {\n\t\t\talign = 0x01;\n\t\t} else if (value === 'right') {\n\t\t\talign = 0x02;\n\t\t}\n\n\t\treturn [0x1b, 0x1d, 0x61, align];\n\t}\n\n\t/**\n\t * Generate a barcode\n\t * @param {string} value        Value to encode\n\t * @param {string|number} symbology    Barcode symbology\n\t * @param {object} options      Configuration object\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\tbarcode(value: string, symbology: string | number, options: BarcodeOptions): CommandArray {\n\t\tlet result = [];\n\n\t\tconst symbologies: Record<string, number> = {\n\t\t\t'upce': 0x00,\n\t\t\t'upca': 0x01,\n\t\t\t'ean8': 0x02,\n\t\t\t'ean13': 0x03,\n\t\t\t'code39': 0x04,\n\t\t\t'itf': 0x05,\n\t\t\t'interleaved-2-of-5': 0x05,\n\t\t\t'code128': 0x06,\n\t\t\t'code93': 0x07,\n\t\t\t'nw-7': 0x08,\n\t\t\t'codabar': 0x08,\n\t\t\t'gs1-128': 0x09,\n\t\t\t'gs1-databar-omni': 0x0a,\n\t\t\t'gs1-databar-truncated': 0x0b,\n\t\t\t'gs1-databar-limited': 0x0c,\n\t\t\t'gs1-databar-expanded': 0x0d\n\t\t};\n\n\t\tif (typeof symbology === 'string' && typeof symbologies[symbology] === 'undefined') {\n\t\t\tthrow new Error(`Symbology '${symbology}' not supported by language`);\n\t\t}\n\n\t\tif (options.width < 1 || options.width > 3) {\n\t\t\tthrow new Error('Width must be between 1 and 3');\n\t\t}\n\n\t\t/* Selecting mode A, B or C for Code128 is not supported for StarPRNT, so ignore it and let the printer choose */\n\n\t\tif (symbology === 'code128' && value.startsWith('{')) {\n\t\t\tvalue = value.slice(2);\n\t\t}\n\n\t\t/* Encode the barcode value */\n\n\t\tconst bytes = CodepageEncoder.encode(value, 'ascii');\n\n\t\tconst identifier = typeof symbology === 'string' ? symbologies[symbology] : symbology;\n\n\t\tresult.push(0x1b, 0x62, identifier, options.text ? 0x02 : 0x01, options.width, options.height, ...bytes, 0x1e);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Generate a QR code\n\t * @param {string} value        Value to encode\n\t * @param {object} options      Configuration object\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\tqrcode(value: string, options: QrCodeOptions): CommandArray {\n\t\tlet result = [];\n\n\t\t/* Model */\n\n\t\tconst models = {\n\t\t\t1: 0x01,\n\t\t\t2: 0x02\n\t\t};\n\n\t\tif (options.model in models) {\n\t\t\tresult.push([0x1b, 0x1d, 0x79, 0x53, 0x30, models[options.model]]);\n\t\t} else {\n\t\t\tthrow new Error('Model must be 1 or 2');\n\t\t}\n\n\t\t/* Size */\n\n\t\tif (typeof options.size !== 'number') {\n\t\t\tthrow new Error('Size must be a number');\n\t\t}\n\n\t\tif (options.size < 1 || options.size > 8) {\n\t\t\tthrow new Error('Size must be between 1 and 8');\n\t\t}\n\n\t\tresult.push([0x1b, 0x1d, 0x79, 0x53, 0x32, options.size]);\n\n\t\t/* Error level */\n\n\t\tconst errorlevels = {\n\t\t\tl: 0x00,\n\t\t\tm: 0x01,\n\t\t\tq: 0x02,\n\t\t\th: 0x03\n\t\t};\n\n\t\tif (options.errorlevel in errorlevels) {\n\t\t\tresult.push([0x1b, 0x1d, 0x79, 0x53, 0x31, errorlevels[options.errorlevel]]);\n\t\t} else {\n\t\t\tthrow new Error('Error level must be l, m, q or h');\n\t\t}\n\n\t\t/* Data */\n\n\t\tconst bytes = CodepageEncoder.encode(value, 'iso8859-1');\n\t\tconst length = bytes.length;\n\n\t\tresult.push([0x1b, 0x1d, 0x79, 0x44, 0x31, 0x00, length & 0xff, (length >> 8) & 0xff, ...bytes]);\n\n\t\t/* Print QR code */\n\n\t\tresult.push([0x1b, 0x1d, 0x79, 0x50]);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Generate a PDF417 code\n\t * @param {string} value        Value to encode\n\t * @param {object} options      Configuration object\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\tpdf417(value: string, options: Pdf417Options): CommandArray {\n\t\tlet result = [];\n\n\t\t/* Columns and Rows */\n\n\t\tif (typeof options.columns !== 'number') {\n\t\t\tthrow new Error('Columns must be a number');\n\t\t}\n\n\t\tif (options.columns !== 0 && (options.columns < 1 || options.columns > 30)) {\n\t\t\tthrow new Error('Columns must be 0, or between 1 and 30');\n\t\t}\n\n\t\tif (typeof options.rows !== 'number') {\n\t\t\tthrow new Error('Rows must be a number');\n\t\t}\n\n\t\tif (options.rows !== 0 && (options.rows < 3 || options.rows > 90)) {\n\t\t\tthrow new Error('Rows must be 0, or between 3 and 90');\n\t\t}\n\n\t\tresult.push([0x1b, 0x1d, 0x78, 0x53, 0x30, 0x01, options.rows, options.columns]);\n\n\t\t/* Width */\n\n\t\tif (typeof options.width !== 'number') {\n\t\t\tthrow new Error('Width must be a number');\n\t\t}\n\n\t\tif (options.width < 2 || options.width > 8) {\n\t\t\tthrow new Error('Width must be between 2 and 8');\n\t\t}\n\n\t\tresult.push([0x1b, 0x1d, 0x78, 0x53, 0x32, options.width]);\n\n\t\t/* Height */\n\n\t\tif (typeof options.height !== 'number') {\n\t\t\tthrow new Error('Height must be a number');\n\t\t}\n\n\t\tif (options.height < 2 || options.height > 8) {\n\t\t\tthrow new Error('Height must be between 2 and 8');\n\t\t}\n\n\t\tresult.push([0x1b, 0x1d, 0x78, 0x53, 0x33, options.height]);\n\n\t\t/* Error level */\n\n\t\tif (typeof options.errorlevel !== 'number') {\n\t\t\tthrow new Error('Errorlevel must be a number');\n\t\t}\n\n\t\tif (options.errorlevel < 0 || options.errorlevel > 8) {\n\t\t\tthrow new Error('Errorlevel must be between 0 and 8');\n\t\t}\n\n\t\tresult.push([0x1b, 0x1d, 0x78, 0x53, 0x31, options.errorlevel]);\n\n\t\t/* Data */\n\n\t\tconst bytes = CodepageEncoder.encode(value, 'ascii');\n\t\tconst length = bytes.length;\n\n\t\tresult.push([0x1b, 0x1d, 0x78, 0x44, length & 0xff, (length >> 8) & 0xff, ...bytes]);\n\n\t\t/* Print PDF417 code */\n\n\t\tresult.push([0x1b, 0x1d, 0x78, 0x50]);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Encode an image\n\t * @param {ImageData} image     ImageData object\n\t * @param {number} width        Width of the image\n\t * @param {number} height       Height of the image\n\t * @param {string} _mode         Image encoding mode (value is ignored)\n\t * @returns {Array}             Array of bytes to send to the printer\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\timage(image: ImageData, width: number, height: number, _mode: ImageMode): CommandArray {\n\t\tlet result = [];\n\n\t\tconst getPixel = (x: number, y: number) =>\n\t\t\ttypeof image.data[(width * y + x) * 4] === 'undefined' || image.data[(width * y + x) * 4] > 0 ? 0 : 1;\n\n\t\tresult.push([0x1b, 0x30]);\n\n\t\tfor (let s = 0; s < height / 24; s++) {\n\t\t\tconst y = s * 24;\n\t\t\tconst bytes = new Uint8Array(width * 3);\n\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst i = x * 3;\n\n\t\t\t\tbytes[i] =\n\t\t\t\t\t(getPixel(x, y + 0) << 7) |\n\t\t\t\t\t(getPixel(x, y + 1) << 6) |\n\t\t\t\t\t(getPixel(x, y + 2) << 5) |\n\t\t\t\t\t(getPixel(x, y + 3) << 4) |\n\t\t\t\t\t(getPixel(x, y + 4) << 3) |\n\t\t\t\t\t(getPixel(x, y + 5) << 2) |\n\t\t\t\t\t(getPixel(x, y + 6) << 1) |\n\t\t\t\t\tgetPixel(x, y + 7);\n\n\t\t\t\tbytes[i + 1] =\n\t\t\t\t\t(getPixel(x, y + 8) << 7) |\n\t\t\t\t\t(getPixel(x, y + 9) << 6) |\n\t\t\t\t\t(getPixel(x, y + 10) << 5) |\n\t\t\t\t\t(getPixel(x, y + 11) << 4) |\n\t\t\t\t\t(getPixel(x, y + 12) << 3) |\n\t\t\t\t\t(getPixel(x, y + 13) << 2) |\n\t\t\t\t\t(getPixel(x, y + 14) << 1) |\n\t\t\t\t\tgetPixel(x, y + 15);\n\n\t\t\t\tbytes[i + 2] =\n\t\t\t\t\t(getPixel(x, y + 16) << 7) |\n\t\t\t\t\t(getPixel(x, y + 17) << 6) |\n\t\t\t\t\t(getPixel(x, y + 18) << 5) |\n\t\t\t\t\t(getPixel(x, y + 19) << 4) |\n\t\t\t\t\t(getPixel(x, y + 20) << 3) |\n\t\t\t\t\t(getPixel(x, y + 21) << 2) |\n\t\t\t\t\t(getPixel(x, y + 22) << 1) |\n\t\t\t\t\tgetPixel(x, y + 23);\n\t\t\t}\n\n\t\t\tresult.push([0x1b, 0x58, width & 0xff, (width >> 8) & 0xff, ...bytes, 0x0a, 0x0d]);\n\t\t}\n\n\t\tresult.push([0x1b, 0x7a, 0x01]);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Cut the paper\n\t * @param {string} value    Cut type ('full' or 'partial')\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tcut(value?: 'full' | 'partial'): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value == 'partial') {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1b, 0x64, data];\n\t}\n\n\t/**\n\t * Send a pulse to the cash drawer\n\t * @param {number} device   Device number\n\t * @param {number} on       Pulse ON time\n\t * @param {number} off      Pulse OFF time\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tpulse(device?: number, on?: number, off?: number): Command {\n\t\tif (typeof device === 'undefined') {\n\t\t\tdevice = 0;\n\t\t}\n\n\t\tif (typeof on === 'undefined') {\n\t\t\ton = 200;\n\t\t}\n\n\t\tif (typeof off === 'undefined') {\n\t\t\toff = 200;\n\t\t}\n\n\t\ton = Math.min(127, Math.round(on / 10));\n\t\toff = Math.min(127, Math.round(off / 10));\n\n\t\treturn [0x1b, 0x07, on & 0xff, off & 0xff, device ? 0x1a : 0x07];\n\t}\n\n\t/**\n\t * Enable or disable bold text\n\t * @param {boolean} value   Enable or disable bold text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tbold(value?: boolean): Command {\n\t\tlet data = 0x46;\n\n\t\tif (value) {\n\t\t\tdata = 0x45;\n\t\t}\n\n\t\treturn [0x1b, data];\n\t}\n\n\t/**\n\t * Enable or disable underline text\n\t * @param {boolean} value   Enable or disable underline text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tunderline(value?: boolean): Command {\n\t\tlet data = 0x00;\n\n\t\tif (value) {\n\t\t\tdata = 0x01;\n\t\t}\n\n\t\treturn [0x1b, 0x2d, data];\n\t}\n\n\t/**\n\t * Enable or disable italic text\n\t * @param {boolean} _value   Enable or disable italic text, optional, default toggles between states (ignored for StarPRNT)\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\titalic(_value?: boolean): Command {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Enable or disable inverted text\n\t * @param {boolean} value   Enable or disable inverted text, optional, default toggles between states\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tinvert(value?: boolean): Command {\n\t\tlet data = 0x35;\n\n\t\tif (value) {\n\t\t\tdata = 0x34;\n\t\t}\n\n\t\treturn [0x1b, data];\n\t}\n\n\t/**\n\t * Change text size\n\t * @param {number} width    Width of the text (1-8)\n\t * @param {number} height   Height of the text (1-8)\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tsize(width: number, height: number): Command {\n\t\treturn [0x1b, 0x69, height - 1, width - 1];\n\t}\n\n\t/**\n\t * Change the codepage\n\t * @param {number} value    Codepage value\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tcodepage(value: number): Command {\n\t\treturn [0x1b, 0x1d, 0x74, value];\n\t}\n\n\t/**\n\t * Flush the printers line buffer\n\t * @returns {Array}         Array of bytes to send to the printer\n\t */\n\tflush(): CommandArray {\n\t\treturn [\n\t\t\t[0x1b, 0x1d, 0x50, 0x30],\n\t\t\t[0x1b, 0x1d, 0x50, 0x31]\n\t\t];\n\t}\n}\n\nexport default LanguageStarPrnt;\n","import type { StyleItem } from './line-composer';\n\nexport interface TextStyleOptions {\n\tcallback: (event: StyleItem) => void;\n}\n\nexport interface TextStyleProperties {\n\tbold: boolean;\n\titalic: boolean;\n\tunderline: boolean;\n\tinvert: boolean;\n\twidth: number;\n\theight: number;\n}\n\n/**\n * Store and manage text styles\n */\nclass TextStyle {\n\t#default: TextStyleProperties = {\n\t\tbold: false,\n\t\titalic: false,\n\t\tunderline: false,\n\t\tinvert: false,\n\t\twidth: 1,\n\t\theight: 1\n\t};\n\n\t#current: TextStyleProperties;\n\t#callback: (event: StyleItem) => void;\n\n\t/**\n\t * Create a new TextStyle object\n\t *\n\t * @param  {object}   options   Object containing configuration options\n\t */\n\tconstructor(options: TextStyleOptions) {\n\t\tthis.#current = structuredClone(this.#default);\n\t\tthis.#callback = options.callback || (() => {});\n\t}\n\n\t/**\n\t * Return commands to get to the default style from the current style\n\t *\n\t * @return {array}   Array of modified properties\n\t */\n\tstore(): StyleItem[] {\n\t\tconst result: StyleItem[] = [];\n\n\t\tfor (const property in this.#current) {\n\t\t\tconst key = property as keyof TextStyleProperties;\n\t\t\tconst currentValue = this.#current[key];\n\t\t\tconst defaultValue = this.#default[key];\n\n\t\t\tif (currentValue !== defaultValue) {\n\t\t\t\tif (key === 'width' || key === 'height') {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: 'style',\n\t\t\t\t\t\tproperty: 'size',\n\t\t\t\t\t\tvalue: { width: defaultValue as number, height: defaultValue as number }\n\t\t\t\t\t} as StyleItem);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: 'style',\n\t\t\t\t\t\tproperty: key,\n\t\t\t\t\t\tvalue: defaultValue as boolean\n\t\t\t\t\t} as StyleItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Return commands to get to the current style from the default style\n\t *\n\t * @return {array}   Array of modified properties\n\t */\n\trestore(): StyleItem[] {\n\t\tconst result: StyleItem[] = [];\n\n\t\tfor (const property in this.#current) {\n\t\t\tconst key = property as keyof TextStyleProperties;\n\t\t\tconst currentValue = this.#current[key];\n\t\t\tconst defaultValue = this.#default[key];\n\n\t\t\tif (currentValue !== defaultValue) {\n\t\t\t\tif (key === 'width' || key === 'height') {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: 'style',\n\t\t\t\t\t\tproperty: 'size',\n\t\t\t\t\t\tvalue: { width: currentValue as number, height: currentValue as number }\n\t\t\t\t\t} as StyleItem);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: 'style',\n\t\t\t\t\t\tproperty: key,\n\t\t\t\t\t\tvalue: currentValue as boolean\n\t\t\t\t\t} as StyleItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Set the bold property\n\t *\n\t * @param  {boolean}   value   Is bold enabled, or not?\n\t */\n\tset bold(value: boolean) {\n\t\tif (value !== this.#current.bold) {\n\t\t\tthis.#current.bold = value;\n\n\t\t\tthis.#callback({\n\t\t\t\ttype: 'style',\n\t\t\t\tproperty: 'bold',\n\t\t\t\tvalue\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the bold property\n\t *\n\t * @return {boolean}   Is bold enabled, or not?\n\t */\n\tget bold(): boolean {\n\t\treturn this.#current.bold;\n\t}\n\n\t/**\n\t * Set the italic property\n\t *\n\t * @param  {boolean}   value   Is italic enabled, or not?\n\t */\n\tset italic(value: boolean) {\n\t\tif (value !== this.#current.italic) {\n\t\t\tthis.#current.italic = value;\n\n\t\t\tthis.#callback({\n\t\t\t\ttype: 'style',\n\t\t\t\tproperty: 'italic',\n\t\t\t\tvalue\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the italic property\n\t *\n\t * @return {boolean}   Is italic enabled, or not?\n\t */\n\tget italic(): boolean {\n\t\treturn this.#current.italic;\n\t}\n\n\t/**\n\t * Set the underline property\n\t *\n\t * @param  {boolean}   value   Is underline enabled, or not?\n\t */\n\tset underline(value: boolean) {\n\t\tif (value !== this.#current.underline) {\n\t\t\tthis.#current.underline = value;\n\n\t\t\tthis.#callback({\n\t\t\t\ttype: 'style',\n\t\t\t\tproperty: 'underline',\n\t\t\t\tvalue\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the underline property\n\t *\n\t * @return {boolean}   Is underline enabled, or not?\n\t */\n\tget underline(): boolean {\n\t\treturn this.#current.underline;\n\t}\n\n\t/**\n\t * Set the invert property\n\t *\n\t * @param  {boolean}   value   Is invert enabled, or not?\n\t */\n\tset invert(value: boolean) {\n\t\tif (value !== this.#current.invert) {\n\t\t\tthis.#current.invert = value;\n\n\t\t\tthis.#callback({\n\t\t\t\ttype: 'style',\n\t\t\t\tproperty: 'invert',\n\t\t\t\tvalue\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the invert property\n\t *\n\t * @return {boolean}   Is invert enabled, or not?\n\t */\n\tget invert(): boolean {\n\t\treturn this.#current.invert;\n\t}\n\n\t/**\n\t * Set the width property\n\t *\n\t * @param  {number}   value   The width of a character\n\t */\n\tset width(value: number) {\n\t\tif (value !== this.#current.width) {\n\t\t\tthis.#current.width = value;\n\n\t\t\tthis.#callback({\n\t\t\t\ttype: 'style',\n\t\t\t\tproperty: 'size',\n\t\t\t\tvalue: { width: this.#current.width, height: this.#current.height }\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the width property\n\t *\n\t * @return {number}   The width of a character\n\t */\n\tget width(): number {\n\t\treturn this.#current.width;\n\t}\n\n\t/**\n\t * Set the height property\n\t *\n\t * @param  {number}   value   The height of a character\n\t */\n\tset height(value: number) {\n\t\tif (value !== this.#current.height) {\n\t\t\tthis.#current.height = value;\n\n\t\t\tthis.#callback({\n\t\t\t\ttype: 'style',\n\t\t\t\tproperty: 'size',\n\t\t\t\tvalue: { width: this.#current.width, height: this.#current.height }\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the height property\n\t *\n\t * @return {number}   The height of a character\n\t */\n\tget height(): number {\n\t\treturn this.#current.height;\n\t}\n}\n\nexport default TextStyle;\n","export interface TextWrapOptions {\n\tindent?: number;\n\twidth?: number;\n\tcolumns?: number;\n}\n\n/**\n * Wrap text into lines of a specified width.\n */\nclass TextWrap {\n\t/**\n\t * Static function to wrap text into lines of a specified width.\n\t *\n\t * @param  {string}   value     Text to wrap\n\t * @param  {object}   options   Object containing configuration options\n\t * @return {array}              Array of lines\n\t */\n\tstatic wrap(value: string, options: TextWrapOptions): string[] {\n\t\tconst chunkedLines: string[][] = [];\n\t\tlet line: string[] = [];\n\t\tlet length = options.indent || 0;\n\t\tconst width = options.width || 1;\n\t\tconst columns = options.columns || 42;\n\n\t\tconst lines = String(value).split(/\\r\\n|\\n/g);\n\n\t\tfor (const value of lines) {\n\t\t\tconst chunks = value.match(/[^\\s-]+?-\\b|\\S+|\\s+|\\r\\n?|\\n/g) || ['~~empty~~'];\n\n\t\t\tfor (const chunk of chunks) {\n\t\t\t\tif (chunk === '~~empty~~') {\n\t\t\t\t\tchunkedLines.push(line);\n\t\t\t\t\tline = [];\n\t\t\t\t\tlength = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t/* The word does not fit on the line */\n\n\t\t\t\tif (length + chunk.length * width > columns) {\n\t\t\t\t\t/* The word is longer than the line */\n\n\t\t\t\t\tif (chunk.length * width > columns) {\n\t\t\t\t\t\t/* Calculate the remaining space on the line */\n\n\t\t\t\t\t\tconst remaining = columns - length;\n\n\t\t\t\t\t\t/* Split the word into pieces */\n\n\t\t\t\t\t\tconst letters = chunk.split('');\n\t\t\t\t\t\tlet piece;\n\t\t\t\t\t\tconst pieces = [];\n\n\t\t\t\t\t\t/* If there are at least 8 positions remaining, break early  */\n\n\t\t\t\t\t\tif (remaining > 8 * width) {\n\t\t\t\t\t\t\tpiece = letters.splice(0, Math.floor(remaining / width)).join('');\n\n\t\t\t\t\t\t\tline.push(piece);\n\t\t\t\t\t\t\tchunkedLines.push(line);\n\n\t\t\t\t\t\t\tline = [];\n\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* The remaining letters can be split into pieces the size of the width */\n\n\t\t\t\t\t\twhile ((piece = letters.splice(0, Math.floor(columns / width))).length) {\n\t\t\t\t\t\t\tpieces.push(piece.join(''));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const piece of pieces) {\n\t\t\t\t\t\t\tif (length + piece.length * width > columns) {\n\t\t\t\t\t\t\t\tchunkedLines.push(line);\n\t\t\t\t\t\t\t\tline = [];\n\t\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tline.push(piece);\n\t\t\t\t\t\t\tlength += piece.length * width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Word fits on the next line */\n\t\t\t\t\tchunkedLines.push(line);\n\t\t\t\t\tline = [];\n\t\t\t\t\tlength = 0;\n\t\t\t\t}\n\n\t\t\t\t/* Check if we are whitespace */\n\n\t\t\t\tif (chunk.match(/\\s+/) && length == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tline.push(chunk);\n\t\t\t\tlength += chunk.length * width;\n\t\t\t}\n\n\t\t\tif (line.length > 0) {\n\t\t\t\tchunkedLines.push(line);\n\t\t\t\tline = [];\n\t\t\t\tlength = 0;\n\t\t\t}\n\t\t}\n\n\t\tconst result: string[] = [];\n\n\t\tfor (let i = 0; i < chunkedLines.length; i++) {\n\t\t\tlet flattenedLine = chunkedLines[i].join('');\n\n\t\t\tif (i < chunkedLines.length - 1) {\n\t\t\t\tflattenedLine = flattenedLine.trimEnd();\n\t\t\t}\n\t\t\tresult.push(flattenedLine);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport default TextWrap;\n","import TextStyle from './text-style.js';\nimport TextWrap from './text-wrap.js';\nimport { TextAlign, StyleProperty, Size, CommandArray, Command } from './types/printers';\n\nexport const isCommandArray = (val: CommandArray | Command): val is CommandArray =>\n\tArray.isArray(val) && val.length > 0 && Array.isArray(val[0]);\n\nexport type TextItem = {\n\ttype: 'text';\n\tvalue: string;\n\tcodepage: string | null;\n};\nexport const isTextItem = (item: BufferItem): item is TextItem => item.type === 'text';\n\nexport type SpaceItem = {\n\ttype: 'space';\n\tsize: number;\n};\nexport const isSpaceItem = (item: BufferItem): item is SpaceItem => item.type === 'space';\n\nexport type RawItem = {\n\ttype: 'raw';\n\tvalue: Command;\n};\nexport const isRawItem = (item: BufferItem): item is RawItem => item.type === 'raw';\n\nexport type AlignItem = {\n\ttype: 'align';\n\tvalue: TextAlign;\n};\nexport const isAlignItem = (item: BufferItem): item is AlignItem => item.type === 'align';\n\nexport type StyleItem =\n\t| {\n\t\t\ttype: 'style';\n\t\t\tproperty: StyleProperty;\n\t\t\tvalue: boolean;\n\t  }\n\t| {\n\t\t\ttype: 'style';\n\t\t\tproperty: 'size';\n\t\t\tvalue: Size;\n\t  };\nexport const isStyleItem = (item: BufferItem): item is StyleItem => item.type === 'style';\n\nexport type EmptyItem = {\n\ttype: 'empty';\n};\nexport const isEmptyItem = (item: BufferItem): item is EmptyItem => item.type === 'empty';\nexport type BufferItem = TextItem | SpaceItem | RawItem | AlignItem | StyleItem | EmptyItem;\nexport type LineCommands = { commands: BufferItem[]; height: number };\n\nexport interface LineComposerOptions {\n\tembedded?: boolean;\n\tcolumns?: number;\n\talign?: TextAlign;\n\tcallback?: (value: any) => void;\n}\n\ninterface BufferOptions {\n\tforceNewline?: boolean;\n\tforceFlush?: boolean;\n\tignoreAlignment?: boolean;\n}\n\n/**\n * Compose lines of text and commands\n */\nclass LineComposer {\n\tpublic style: TextStyle;\n\n\t#embedded;\n\t#columns;\n\t#align;\n\t#callback;\n\n\t#cursor = 0;\n\t#stored;\n\t#buffer: BufferItem[] = [];\n\n\t/**\n\t * Create a new LineComposer object\n\t *\n\t * @param  {object}   options   Object containing configuration options\n\t */\n\tconstructor(options: LineComposerOptions) {\n\t\tthis.#embedded = options.embedded || false;\n\t\tthis.#columns = options.columns || 42;\n\t\tthis.#align = options.align || 'left';\n\t\tthis.#callback = options.callback || (() => {});\n\n\t\tthis.style = new TextStyle({\n\t\t\tcallback: (value) => {\n\t\t\t\tthis.add(value, 0);\n\t\t\t}\n\t\t});\n\n\t\tthis.#stored = this.style.store();\n\t}\n\n\t/**\n\t * Add text to the line, potentially wrapping it\n\t *\n\t * @param  {string}   value   Text to add to the line\n\t * @param  {string}   codepage   Codepage to use for the text\n\t */\n\ttext(value: string, codepage: string) {\n\t\tconst lines = TextWrap.wrap(value, { columns: this.#columns, width: this.style.width, indent: this.#cursor });\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tif (lines[i].length) {\n\t\t\t\t/* Add the line to the buffer */\n\t\t\t\tthis.add({ type: 'text', value: lines[i], codepage }, lines[i].length * this.style.width);\n\n\t\t\t\t/* If it is not the last line, flush the buffer */\n\t\t\t\tif (i < lines.length - 1) {\n\t\t\t\t\tthis.flush();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* In case the line is empty, flush the buffer */\n\t\t\t\tthis.flush({ forceNewline: true });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add spaces to the line\n\t *\n\t * @param {number} size Number of spaces to add to the line\n\t */\n\tspace(size: number) {\n\t\tthis.add({ type: 'space', size }, size);\n\t}\n\n\t/**\n\t * Add raw bytes to to the line\n\t *\n\t * @param  {array}   value   Array of bytes to add to the line\n\t * @param  {number}  length  Length in characters of the value\n\t */\n\traw(value: CommandArray | Command, length?: number) {\n\t\tif (isCommandArray(value)) {\n\t\t\tfor (const command of value) {\n\t\t\t\tthis.add({ type: 'raw', value: command }, length || 0);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add({ type: 'raw', value }, length || 0);\n\t\t}\n\t}\n\n\t/**\n\t * Add an item to the line buffer, potentially flushing it\n\t *\n\t * @param  {object}   value   Item to add to the line buffer\n\t * @param  {number}   length  Length in characters of the value\n\t */\n\tadd(value: BufferItem | BufferItem[], length: number) {\n\t\tif (length + this.#cursor > this.#columns) {\n\t\t\tthis.flush();\n\t\t}\n\n\t\tthis.#cursor += length;\n\t\tthis.#buffer = this.#buffer.concat(Array.isArray(value) ? value : [value]);\n\t}\n\n\t/**\n\t * Move the cursor to the end of the line, forcing a flush\n\t * with the next item to add to the line buffer\n\t */\n\tend() {\n\t\tthis.#cursor = this.#columns;\n\t}\n\n\t/**\n\t * Fetch the contents of line buffer\n\t *\n\t * @param  {options}   options   Options for flushing the buffer\n\t * @return {array}               Array of items in the line buffer\n\t */\n\tfetch(options: BufferOptions): BufferItem[] {\n\t\t/* Unless forced keep style changes for the next line */\n\n\t\tif (this.#cursor === 0 && !options.forceNewline && !options.forceFlush) {\n\t\t\treturn [];\n\t\t}\n\n\t\t/* Check the alignment of the current line */\n\n\t\tconst align: { current: TextAlign; next: TextAlign | null } = {\n\t\t\tcurrent: this.#align,\n\t\t\tnext: null\n\t\t};\n\n\t\tfor (let i = 0; i < this.#buffer.length - 1; i++) {\n\t\t\tconst item = this.#buffer[i];\n\t\t\tif (isAlignItem(item)) {\n\t\t\t\talign.current = item.value;\n\t\t\t}\n\t\t}\n\n\t\t/* Check the last item in the buffer, to see if it changes the alignment, then save it for the next line */\n\n\t\tif (this.#buffer.length) {\n\t\t\tconst last = this.#buffer[this.#buffer.length - 1];\n\n\t\t\tif (last.type === 'align') {\n\t\t\t\talign.next = last.value;\n\t\t\t}\n\t\t}\n\n\t\tthis.#align = align.current;\n\n\t\t/* Fetch the contents of the line buffer */\n\n\t\tlet result: BufferItem[] = [];\n\n\t\tconst restore = this.style.restore();\n\t\tconst store = this.style.store();\n\n\t\tif (this.#cursor === 0 && options.ignoreAlignment) {\n\t\t\tresult = this.#merge([...this.#stored, ...this.#buffer, ...store]);\n\t\t} else {\n\t\t\tif (this.#align === 'right') {\n\t\t\t\tlet last;\n\n\t\t\t\t/* Find index of last text or space element */\n\n\t\t\t\tfor (let i = this.#buffer.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this.#buffer[i].type === 'text' || this.#buffer[i].type === 'space') {\n\t\t\t\t\t\tlast = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Remove trailing spaces from lines */\n\n\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\tconst lastItem = this.#buffer[last];\n\n\t\t\t\t\tif (isSpaceItem(lastItem) && lastItem.size > this.style.width) {\n\t\t\t\t\t\tlastItem.size -= this.style.width;\n\t\t\t\t\t\tthis.#cursor -= this.style.width;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTextItem(lastItem) && lastItem.value.endsWith(' ')) {\n\t\t\t\t\t\tlastItem.value = lastItem.value.slice(0, -1);\n\t\t\t\t\t\tthis.#cursor -= this.style.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult = this.#merge([\n\t\t\t\t\t{ type: 'space', size: this.#columns - this.#cursor },\n\t\t\t\t\t...this.#stored,\n\t\t\t\t\t...this.#buffer,\n\t\t\t\t\t...store\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tif (this.#align === 'center') {\n\t\t\t\tconst left = (this.#columns - this.#cursor) >> 1;\n\n\t\t\t\tresult = this.#merge([\n\t\t\t\t\t{ type: 'space', size: left },\n\t\t\t\t\t...this.#stored,\n\t\t\t\t\t...this.#buffer,\n\t\t\t\t\t...store,\n\t\t\t\t\t{ type: 'space', size: this.#embedded ? this.#columns - this.#cursor - left : 0 }\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tif (this.#align === 'left') {\n\t\t\t\tresult = this.#merge([\n\t\t\t\t\t...this.#stored,\n\t\t\t\t\t...this.#buffer,\n\t\t\t\t\t...store,\n\t\t\t\t\t{ type: 'space', size: this.#embedded ? this.#columns - this.#cursor : 0 }\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\tthis.#stored = restore;\n\t\tthis.#buffer = [];\n\t\tthis.#cursor = 0;\n\n\t\tif (result.length === 0 && options.forceNewline) {\n\t\t\tresult.push({ type: 'empty' });\n\t\t}\n\n\t\tif (align.next) {\n\t\t\tthis.#align = align.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Flush the contents of the line buffer\n\t *\n\t * @param  {options}   options   Options for flushing the buffer\n\t */\n\tflush(options?: BufferOptions) {\n\t\toptions = Object.assign(\n\t\t\t{\n\t\t\t\tforceNewline: false,\n\t\t\t\tforceFlush: false,\n\t\t\t\tignoreAlignment: false\n\t\t\t},\n\t\t\toptions || {}\n\t\t);\n\n\t\tconst result = this.fetch(options);\n\n\t\tif (result.length) {\n\t\t\tthis.#callback(result);\n\t\t}\n\t}\n\n\t/**\n\t * Merge text items and spaces in the line buffer\n\t *\n\t * @param  {array}   items   Array of items\n\t * @return {array}           Array of merged items\n\t */\n\t#merge(items: BufferItem[]): BufferItem[] {\n\t\tconst result: BufferItem[] = [];\n\t\tlet last = -1;\n\n\t\tfunction isTextItem(item: BufferItem): item is TextItem {\n\t\t\treturn item.type === 'text';\n\t\t}\n\n\t\tfor (let item of items) {\n\t\t\tif (item.type === 'space' && 'size' in item && item.size > 0) {\n\t\t\t\titem = { type: 'text', value: ' '.repeat(item.size), codepage: null };\n\t\t\t}\n\n\t\t\tif (isTextItem(item)) {\n\t\t\t\tconst lastItem = result[last];\n\t\t\t\tconst allowMerge =\n\t\t\t\t\tlast >= 0 &&\n\t\t\t\t\tisTextItem(lastItem) &&\n\t\t\t\t\t(lastItem.codepage === item.codepage || lastItem.codepage === null || item.codepage === null);\n\n\t\t\t\tif (allowMerge) {\n\t\t\t\t\tlastItem.value += item.value;\n\t\t\t\t\tlastItem.codepage = lastItem.codepage || item.codepage;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(item);\n\t\t\t\tlast++;\n\t\t\t} else if (isStyleItem(item) && item.property === 'size') {\n\t\t\t\tconst lastItem = result[last];\n\t\t\t\tconst allowMerge = last >= 0 && isStyleItem(lastItem) && lastItem.property === 'size';\n\n\t\t\t\tif (allowMerge) {\n\t\t\t\t\tlastItem.value = item.value;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(item);\n\t\t\t\tlast++;\n\t\t\t} else if (item.type === 'style' || item.type === 'raw') {\n\t\t\t\tresult.push(item);\n\t\t\t\tlast++;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get the current position of the cursor\n\t *\n\t * @return {number}   Current position of the cursor\n\t */\n\tget cursor(): number {\n\t\treturn this.#cursor;\n\t}\n\n\t/**\n\t * Set the alignment of the current line\n\t *\n\t * @param  {string}   value   Text alignment, can be 'left', 'center', or 'right'\n\t */\n\tset align(value: TextAlign) {\n\t\tthis.add({ type: 'align', value }, 0);\n\t}\n\n\t/**\n\t * Get the alignment of the current line\n\t *\n\t * @return {string}   Text alignment, can be 'left', 'center', or 'right'\n\t */\n\tget align(): TextAlign {\n\t\tlet align = this.#align;\n\n\t\tfor (let i = 0; i < this.#buffer.length; i++) {\n\t\t\tconst item = this.#buffer[i];\n\t\t\tif (isAlignItem(item)) {\n\t\t\t\talign = item.value;\n\t\t\t}\n\t\t}\n\n\t\treturn align;\n\t}\n\n\t/**\n\t * Set the number of columns of the current line\n\t *\n\t * @param  {number}   value   columns of the line\n\t */\n\tset columns(value: number) {\n\t\tthis.#columns = value;\n\t}\n\n\t/**\n\t * Get the number of columns of the current line\n\t *\n\t * @return {number}   columns of the line\n\t */\n\tget columns(): number {\n\t\treturn this.#columns;\n\t}\n}\n\nexport default LineComposer;\n","const codepageMappings = {\n  'esc-pos': {\n    'bixolon/legacy': [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp858'\n    ],\n    bixolon: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      null,\n      'cp862',\n      'cp864',\n      'thai42',\n      'windows1253',\n      'windows1254',\n      'windows1257',\n      null,\n      'windows1251',\n      'cp737',\n      'cp775',\n      'thai14',\n      'bixolon/hebrew',\n      'windows1255',\n      'thai11',\n      'thai18',\n      'cp885',\n      'cp857',\n      'iso8859-7',\n      'thai16',\n      'windows1256',\n      'windows1258',\n      'khmer',\n      null,\n      null,\n      null,\n      'bixolon/cp866',\n      'windows1250',\n      null,\n      'tcvn3',\n      'tcvn3capitals',\n      'viscii'\n    ],\n    citizen: [\n      'cp437',\n      'epson/katakana',\n      'cp858',\n      'cp860',\n      'cp863',\n      'cp865',\n      'cp852',\n      'cp866',\n      'cp857',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      null,\n      null,\n      null,\n      null,\n      'thai11',\n      null,\n      null,\n      null,\n      null,\n      'thai13',\n      null,\n      null,\n      null,\n      'tcvn3',\n      'tcvn3capitals',\n      'windows1258',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp864'\n    ],\n    'epson/legacy': [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858'\n    ],\n    epson: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp851',\n      'cp853',\n      'cp857',\n      'cp737',\n      'iso8859-7',\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      'thai42',\n      'thai11',\n      null,\n      null,\n      null,\n      null,\n      'thai13',\n      null,\n      null,\n      null,\n      'tcvn3',\n      'tcvn3capitals',\n      'cp720',\n      'cp775',\n      'cp855',\n      'cp861',\n      'cp862',\n      'cp864',\n      'cp869',\n      'epson/iso8859-2',\n      'iso8859-15',\n      'cp1098',\n      'cp774',\n      'cp772',\n      'cp1125',\n      'windows1250',\n      'windows1251',\n      'windows1253',\n      'windows1254',\n      'windows1255',\n      'windows1256',\n      'windows1257',\n      'windows1258',\n      'rk1048'\n    ],\n    fujitsu: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      'cp857',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'thai13',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp864'\n    ],\n    hp: [\n      'cp437',\n      'cp850',\n      'cp852',\n      'cp860',\n      'cp863',\n      'cp865',\n      'cp858',\n      'cp866',\n      'windows1252',\n      'cp862',\n      'cp737',\n      'cp874',\n      'cp857',\n      'windows1251',\n      'windows1255',\n      'rk1048'\n    ],\n    metapace: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp858'\n    ],\n    mpt: [\n      'cp437',\n      null,\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      'windows1251',\n      'cp866',\n      'cp3021',\n      'cp3012'\n    ],\n    'pos-5890': [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      'iso8859-1',\n      null,\n      'cp862',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      null,\n      null,\n      null,\n      'windows1251',\n      'cp737',\n      'windows1257',\n      null,\n      'windows1258',\n      'cp864',\n      null,\n      null,\n      null,\n      'windows1255',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp861',\n      null,\n      null,\n      null,\n      'cp855',\n      'cp857',\n      null,\n      null,\n      null,\n      'cp851',\n      'cp869',\n      null,\n      'cp772',\n      'cp774',\n      null,\n      null,\n      'windows1250',\n      null,\n      'cp3840',\n      null,\n      'cp3843',\n      'cp3844',\n      'cp3845',\n      'cp3846',\n      'cp3847',\n      'cp3848',\n      null,\n      'cp771',\n      'cp3001',\n      'cp3002',\n      'cp3011',\n      'cp3012',\n      null,\n      'cp3041',\n      'windows1253',\n      'windows1254',\n      'windows1256',\n      'cp720',\n      null,\n      'cp775'\n    ],\n    'pos-8360': [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      'iso8859-1',\n      'windows1253',\n      'cp862',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      null,\n      'latvian',\n      null,\n      'windows1251',\n      'cp737',\n      'windows1257',\n      null,\n      'windows1258',\n      'cp864',\n      null,\n      null,\n      'pos8360/hebrew',\n      'windows1255',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp861',\n      null,\n      null,\n      null,\n      'cp855',\n      'cp857',\n      null,\n      null,\n      null,\n      'cp851',\n      'cp869',\n      null,\n      'cp772',\n      'cp774',\n      null,\n      null,\n      'windows1250',\n      null,\n      'cp3840',\n      null,\n      'cp3843',\n      'cp3844',\n      'cp3845',\n      'cp3846',\n      'cp3847',\n      'cp3848',\n      null,\n      'cp771',\n      'cp3001',\n      'cp3002',\n      'cp3011',\n      'cp3012',\n      null,\n      null,\n      null,\n      'windows1254',\n      'windows1256',\n      'cp720',\n      null,\n      'cp775'\n    ],\n    star: [\n      'cp437',\n      'star/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      'thai42',\n      'thai11',\n      'thai13',\n      'thai14',\n      'thai16',\n      null,\n      'thai18'\n    ],\n    xprinter: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      'iso8859-1',\n      'windows1253',\n      'xprinter/hebrew',\n      'cp3012',\n      null,\n      'windows1255',\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      null,\n      'latvian',\n      'cp864',\n      'windows1251',\n      'cp737',\n      'windows1257',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1256'\n    ],\n    youku: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      'windows1251',\n      'cp866',\n      'cp3021',\n      'cp3012',\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp862',\n      'windows1252',\n      null,\n      'cp852',\n      'cp858',\n      null,\n      null,\n      'cp864',\n      'iso8859-1',\n      'cp737',\n      'windows1257',\n      null,\n      null,\n      'cp855',\n      'cp857',\n      'windows1250',\n      'cp775',\n      'windows1254',\n      'windows1255',\n      'windows1256',\n      'windows1258',\n      null,\n      null,\n      'iso8859-1',\n      null,\n      null,\n      null,\n      null,\n      null,\n      'iso8859-15',\n      null,\n      null,\n      'cp874'\n    ],\n    zijang: [\n      'cp437',\n      'epson/katakana',\n      'cp850',\n      'cp860',\n      'cp863',\n      'cp865',\n      'iso8859-1',\n      null,\n      'cp862',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'cp866',\n      'cp852',\n      'cp858',\n      null,\n      null,\n      null,\n      'windows1251',\n      'cp737',\n      'windows1257',\n      null,\n      'windows1258',\n      'cp864',\n      null,\n      null,\n      null,\n      'windows1255',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp861',\n      null,\n      null,\n      null,\n      'cp855',\n      'cp857',\n      null,\n      null,\n      null,\n      'cp851',\n      'cp869',\n      null,\n      'cp772',\n      'cp774',\n      null,\n      null,\n      'windows1250',\n      null,\n      'cp3840',\n      null,\n      'cp3843',\n      'cp3844',\n      'cp3845',\n      'cp3846',\n      'cp3847',\n      'cp3848',\n      null,\n      'cp771',\n      'cp3001',\n      'cp3002',\n      'cp3011',\n      'cp3012',\n      null,\n      'cp3041',\n      'windows1253',\n      'windows1254',\n      'windows1256',\n      'cp720',\n      null,\n      'cp775'\n    ]\n  },\n  'star-prnt': {\n    star: [\n      'star/standard',\n      'cp437',\n      'star/katakana',\n      null,\n      'cp858',\n      'cp852',\n      'cp860',\n      'cp861',\n      'cp863',\n      'cp865',\n      'cp866',\n      'cp855',\n      'cp857',\n      'cp862',\n      'cp864',\n      'cp737',\n      'cp851',\n      'cp869',\n      'star/cp928',\n      'cp772',\n      'cp774',\n      'star/cp874',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'windows1250',\n      'windows1251',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp3840',\n      'cp3841',\n      'cp3843',\n      'cp3844',\n      'cp3845',\n      'cp3846',\n      'cp3847',\n      'cp3848',\n      'cp1001',\n      'cp771',\n      'cp3001',\n      'cp3002',\n      'cp3011',\n      'cp3012',\n      'cp3021',\n      'cp3041'\n    ]\n  },\n  'star-line': {\n    star: [\n      'star/standard',\n      'cp437',\n      'star/katakana',\n      null,\n      'cp858',\n      'cp852',\n      'cp860',\n      'cp861',\n      'cp863',\n      'cp865',\n      'cp866',\n      'cp855',\n      'cp857',\n      'cp862',\n      'cp864',\n      'cp737',\n      'cp851',\n      'cp869',\n      'star/cp928',\n      'cp772',\n      'cp774',\n      'star/cp874',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'windows1252',\n      'windows1250',\n      'windows1251',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'cp3840',\n      'cp3841',\n      'cp3843',\n      'cp3844',\n      'cp3845',\n      'cp3846',\n      'cp3847',\n      'cp3848',\n      'cp1001',\n      'cp771',\n      'cp3001',\n      'cp3002',\n      'cp3011',\n      'cp3012',\n      'cp3021',\n      'cp3041'\n    ]\n  }\n};\n\nexport default codepageMappings;\n","const printerDefinitions = {\n\t'bixolon-srp350': {vendor:'Bixolon',model:'SRP-350',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'bixolon/legacy',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:false,models:[]},pdf417:{supported:false},cutter:{feed:4}}},\n\t'bixolon-srp350iii': {vendor:'Bixolon',model:'SRP-350III',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'bixolon',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56},C:{size:'9x24',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'citizen-ct-s310ii': {vendor:'Citizen',model:'CT-S310II',media:{dpi:203,width:80},capabilities:{language:'esc-pos',codepages:'citizen',fonts:{A:{size:'12x24',columns:48},B:{size:'9x24',columns:64},C:{size:'8x16',columns:72}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:3}}},\n\t'epson-tm-p20ii': {vendor:'Epson',model:'TM-P20II',media:{dpi:203,width:58},capabilities:{language:'esc-pos',codepages:'epson',fonts:{A:{size:'12x24',columns:32},B:{size:'9x24',columns:42},C:{size:'9x17',columns:42},D:{size:'10x24',columns:38},E:{size:'8x16',columns:48}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded','code128-auto']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},images:{mode:'raster'},cutter:{feed:3}}},\n\t'epson-tm-t20iii': {vendor:'Epson',model:'TM-T20III',interfaces:{usb:{productName:'TM-T20III'}},media:{dpi:203,width:80},capabilities:{language:'esc-pos',codepages:'epson',fonts:{A:{size:'12x24',columns:48},B:{size:'9x17',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'epson-tm-t70': {vendor:'Epson',model:'TM-T70',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson/legacy',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},images:{mode:'raster'},cutter:{feed:4}}},\n\t'epson-tm-t70ii': {vendor:'Epson',model:'TM-T70II','interface':{usb:{productName:'TM-T70II'}},media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},images:{mode:'raster'},cutter:{feed:4}}},\n\t'epson-tm-t88ii': {vendor:'Epson',model:'TM-T88II',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson/legacy',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'epson-tm-t88iii': {vendor:'Epson',model:'TM-T88III',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson/legacy',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'epson-tm-t88iv': {vendor:'Epson',model:'TM-T88IV',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson/legacy',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'epson-tm-t88v': {vendor:'Epson',model:'TM-T88V',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'epson-tm-t88vi': {vendor:'Epson',model:'TM-T88VI',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'epson-tm-t88vii': {vendor:'Epson',model:'TM-T88VII',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'epson',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded','code128-auto']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'fujitsu-fp1000': {vendor:'Fujitsu',model:'FP-1000',media:{dpi:203,width:80},capabilities:{language:'esc-pos',codepages:'fujitsu',fonts:{A:{size:'12x24',columns:48},B:{size:'9x24',columns:56},C:{size:'8x16',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:false},cutter:{feed:4}}},\n\t'hp-a779': {vendor:'HP',model:'A779',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'hp',newline:'\\n',fonts:{A:{size:'12x24',columns:44}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:false,fallback:{type:'barcode',symbology:75}},cutter:{feed:4}}},\n\t'metapace-t1': {vendor:'Metapace',model:'T-1',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'metapace',fonts:{A:{size:'12x24',columns:42},B:{size:'9x17',columns:56}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:false,models:[]},pdf417:{supported:false},cutter:{feed:4}}},\n\t'mpt-ii': {vendor:'',model:'MPT-II',media:{dpi:180,width:80},capabilities:{language:'esc-pos',codepages:'mpt',fonts:{A:{size:'12x24',columns:48},B:{size:'9x17',columns:64},C:{size:'0x0',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:[]},pdf417:{supported:false}}},\n\t'pos-5890': {vendor:'',model:'POS-5890',media:{dpi:203,width:58},capabilities:{language:'esc-pos',codepages:'pos-5890',fonts:{A:{size:'12x24',columns:32},B:{size:'9x17',columns:42}},barcodes:{supported:true,symbologies:['upca','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['2']},pdf417:{supported:true},images:{mode:'raster'},cutter:{feed:1}}},\n\t'pos-8360': {vendor:'',model:'POS-8360',media:{dpi:203,width:80},capabilities:{language:'esc-pos',codepages:'pos-8360',fonts:{A:{size:'12x24',columns:48},B:{size:'9x17',columns:64}},barcodes:{supported:true,symbologies:['upca','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['2']},pdf417:{supported:true},images:{mode:'raster'},cutter:{feed:4}}},\n\t'star-mc-print2': {vendor:'Star',model:'mC-Print2',interfaces:{usb:{productName:'mC-Print2'}},media:{dpi:203,width:58},capabilities:{language:'star-prnt',codepages:'star',fonts:{A:{size:'12x24',columns:32},B:{size:'9x24',columns:42}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','itf','codabar','code93','code128','gs1-128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:3}}},\n\t'star-mpop': {vendor:'Star',model:'mPOP',interfaces:{usb:{productName:'mPOP'}},media:{dpi:203,width:58},capabilities:{language:'star-prnt',codepages:'star',fonts:{A:{size:'12x24',columns:32},B:{size:'9x24',columns:42}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','itf','codabar','code93','code128','gs1-128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:3}}},\n\t'star-sm-l200': {vendor:'Star',model:'SM-L200',media:{dpi:203,width:58},capabilities:{language:'star-prnt',codepages:'star',fonts:{A:{size:'12x24',columns:32},B:{size:'9x24',columns:42},C:{size:'9x17',columns:42}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','itf','codabar','code93','code128']},qrcode:{supported:true,models:['2']},pdf417:{supported:true}}},\n\t'star-tsp100iii': {vendor:'Star',model:'TSP100III',media:{dpi:203,width:80},capabilities:{language:'star-prnt',codepages:'star',fonts:{A:{size:'12x24',columns:48},B:{size:'9x24',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:3}}},\n\t'star-tsp100iv': {vendor:'Star',model:'TSP100IV',media:{dpi:203,width:80},capabilities:{language:'star-prnt',codepages:'star',fonts:{A:{size:'12x24',columns:48},B:{size:'9x24',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:3}}},\n\t'star-tsp650': {vendor:'Star',model:'TSP650',media:{dpi:203,width:80},capabilities:{language:'star-line',codepages:'star',fonts:{A:{size:'12x24',columns:48},B:{size:'9x24',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:false,models:[]},pdf417:{supported:false},cutter:{feed:3}}},\n\t'star-tsp650ii': {vendor:'Star',model:'TSP650II',media:{dpi:203,width:80},capabilities:{language:'star-line',codepages:'star',fonts:{A:{size:'12x24',columns:48},B:{size:'9x24',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-128','gs1-databar-omni','gs1-databar-truncated','gs1-databar-limited','gs1-databar-expanded']},qrcode:{supported:true,models:['1','2']},pdf417:{supported:true},cutter:{feed:3}}},\n\t'xprinter-xp-n160ii': {vendor:'Xprinter',model:'XP-N160II',interfaces:{usb:{productName:'Printer-80\\u0000'}},media:{dpi:203,width:80},capabilities:{language:'esc-pos',codepages:'xprinter',fonts:{A:{size:'12x24',columns:48},B:{size:'9x17',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-128']},qrcode:{supported:true,models:['2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'xprinter-xp-t80q': {vendor:'Xprinter',model:'XP-T80Q',media:{dpi:203,width:80},capabilities:{language:'esc-pos',codepages:'xprinter',fonts:{A:{size:'12x24',columns:48},B:{size:'9x17',columns:64}},barcodes:{supported:true,symbologies:['upca','upce','ean13','ean8','code39','itf','codabar','code93','code128','gs1-128']},qrcode:{supported:true,models:['2']},pdf417:{supported:true},cutter:{feed:4}}},\n\t'youku-58t': {vendor:'Youku',model:'58T',media:{dpi:203,width:58},capabilities:{language:'esc-pos',codepages:'youku',fonts:{A:{size:'12x24',columns:32},B:{size:'9x24',columns:42}},barcodes:{supported:true,symbologies:['upca','ean13','ean8','code39','itf','codabar','code93','code128']},qrcode:{supported:true,models:['2']},pdf417:{supported:false}}},\n};\n\nexport default printerDefinitions;\n"],"mappings":"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BAAkB,CAChB,QACA,iBACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACF,EACA,QAAS,CACP,QACA,iBACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,KACA,QACA,QACA,SACA,cACA,cACA,cACA,KACA,cACA,QACA,QACA,SACA,iBACA,cACA,SACA,SACA,QACA,QACA,YACA,SACA,cACA,cACA,QACA,KACA,KACA,KACA,gBACA,cACA,KACA,QACA,gBACA,QACF,EACA,QAAS,CACP,QACA,iBACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,KACA,KACA,KACA,KACA,SACA,KACA,KACA,KACA,KACA,SACA,KACA,KACA,KACA,QACA,gBACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACF,EACA,eAAgB,CACd,QACA,iBACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,OACF,EACA,MAAO,CACL,QACA,iBACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,QACA,QACA,YACA,cACA,QACA,QACA,QACA,SACA,SACA,KACA,KACA,KACA,KACA,SACA,KACA,KACA,KACA,QACA,gBACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,kBACA,aACA,SACA,QACA,QACA,SACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,QACF,EACA,QAAS,CACP,QACA,iBACA,QACA,QACA,QACA,QACA,KACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACF,EACA,GAAI,CACF,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,cACA,QACA,QACA,QACA,QACA,cACA,cACA,QACF,EACA,SAAU,CACR,QACA,iBACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACF,EACA,IAAK,CACH,QACA,KACA,QACA,QACA,QACA,QACA,cACA,QACA,SACA,QACF,EACA,WAAY,CACV,QACA,iBACA,QACA,QACA,QACA,QACA,YACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,KACA,KACA,KACA,cACA,QACA,cACA,KACA,cACA,QACA,KACA,KACA,KACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,QACA,QACA,KACA,QACA,QACA,KACA,KACA,cACA,KACA,SACA,KACA,SACA,SACA,SACA,SACA,SACA,SACA,KACA,QACA,SACA,SACA,SACA,SACA,KACA,SACA,cACA,cACA,cACA,QACA,KACA,OACF,EACA,WAAY,CACV,QACA,iBACA,QACA,QACA,QACA,QACA,YACA,cACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,KACA,UACA,KACA,cACA,QACA,cACA,KACA,cACA,QACA,KACA,KACA,iBACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,QACA,QACA,KACA,QACA,QACA,KACA,KACA,cACA,KACA,SACA,KACA,SACA,SACA,SACA,SACA,SACA,SACA,KACA,QACA,SACA,SACA,SACA,SACA,KACA,KACA,KACA,cACA,cACA,QACA,KACA,OACF,EACA,KAAM,CACJ,QACA,gBACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,KACA,QACF,EACA,SAAU,CACR,QACA,iBACA,QACA,QACA,QACA,QACA,YACA,cACA,kBACA,SACA,KACA,cACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,KACA,UACA,QACA,cACA,QACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,aACF,EACA,MAAO,CACL,QACA,iBACA,QACA,QACA,QACA,QACA,cACA,QACA,SACA,SACA,KACA,KACA,KACA,KACA,KACA,QACA,cACA,KACA,QACA,QACA,KACA,KACA,QACA,YACA,QACA,cACA,KACA,KACA,QACA,QACA,cACA,QACA,cACA,cACA,cACA,cACA,KACA,KACA,YACA,KACA,KACA,KACA,KACA,KACA,aACA,KACA,KACA,OACF,EACA,OAAQ,CACN,QACA,iBACA,QACA,QACA,QACA,QACA,YACA,KACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,QACA,QACA,QACA,KACA,KACA,KACA,cACA,QACA,cACA,KACA,cACA,QACA,KACA,KACA,KACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,QACA,QACA,KACA,QACA,QACA,KACA,KACA,cACA,KACA,SACA,KACA,SACA,SACA,SACA,SACA,SACA,SACA,KACA,QACA,SACA,SACA,SACA,SACA,KACA,SACA,cACA,cACA,cACA,QACA,KACA,OACF,CACF,EACA,YAAa,CACX,KAAM,CACJ,gBACA,QACA,gBACA,KACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,QACA,QACA,aACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,cACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACF,CACF,EACA,YAAa,CACX,KAAM,CACJ,gBACA,QACA,gBACA,KACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,QACA,QACA,aACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,cACA,cACA,cACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACF,CACF,CACF,EAEOC,GAAQD,GC12Bf,IAAME,GAAqB,CAC1B,iBAAkB,CAAC,OAAO,UAAU,MAAM,UAAU,MAAM,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,aAAa,CAAC,SAAS,UAAU,UAAU,iBAAiB,MAAM,CAAC,EAAE,CAAC,KAAK,QAAQ,QAAQ,EAAE,EAAE,EAAE,CAAC,KAAK,OAAO,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,UAAU,GAAK,YAAY,CAAC,OAAO,OAAO,QAAQ,OAAO,SAAS,MAAM,UAAU,SAAS,SAAS,CAAC,EAAE,OAAO,CAAC,UAAU,GAAM,O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","names":["Dither","Flatten","CodepageEncoder","ImageData","resizeImageData","CodepageEncoder","LanguageEscPos","type","value","align","symbology","options","result","symbologies","width","bytes","identifier","models","errorlevels","length","image","height","mode","getPixel","x","y","getColumnData","data","s","c","b","getRowData","device","on","off","esc_pos_default","CodepageEncoder","LanguageStarPrnt","type","value","align","symbology","options","result","symbologies","bytes","identifier","models","errorlevels","length","image","width","height","_mode","getPixel","x","y","s","i","data","device","on","off","_value","star_prnt_default","_default","_current","_callback","TextStyle","options","__privateAdd","__privateSet","__privateGet","result","property","key","currentValue","defaultValue","value","text_style_default","TextWrap","value","options","chunkedLines","line","length","width","columns","lines","chunks","chunk","remaining","letters","piece","pieces","result","i","flattenedLine","text_wrap_default","isCommandArray","val","isTextItem","item","isSpaceItem","isAlignItem","item","isStyleItem","_embedded","_columns","_align","_callback","_cursor","_stored","_buffer","_LineComposer_instances","merge_fn","LineComposer","options","__privateAdd","__publicField","__privateSet","text_style_default","value","codepage","lines","text_wrap_default","__privateGet","i","size","length","isCommandArray","command","align","item","isAlignItem","last","result","restore","store","__privateMethod","lastItem","isSpaceItem","isTextItem","left","items","isStyleItem","line_composer_default","codepageMappings","mapping_default","printerDefinitions","printers_default","printerDefinitions","printers_default","codepageMappings","mapping_default","defaultConfiguration","_options","_queue","_language","_composer","_printerCapabilities","_codepageMapping","_codepageCandidates","_codepage","_state","_ReceiptPrinterEncoder_instances","reset_fn","encodeStyle_fn","encodeText_fn","error_fn","_ReceiptPrinterEncoder","options","__privateAdd","defaults","__privateSet","__privateGet","esc_pos_default","star_prnt_default","v","i","line_composer_default","value","__privateMethod","codepage","CodepageEncoder","width","height","matchedFontType","matches","matchedFont","columns","data","lines","maxLines","c","columnEncoder","cellData","cell","p","verticalAlign","line","mergedOptions","contents","elements","symbology","model","size","errorlevel","input","algorithm","threshold","name","type","image","canvas","context","ImageData","resizeImageData","Flatten","Dither","device","on","off","result","remaining","a","b","commands","item","property","fragment","fragments","buffer","message","level","ReceiptPrinterEncoder","receipt_printer_encoder_default"]}